{"version":3,"sources":["components/main/UI/pages/Cards/CardsPack/CardsPack.module.css","components/main/UI/header/Header.module.css","components/main/UI/common/moduls/windowModules/updatePackModule/updatePack.module.css","components/main/UI/common/SearchPack/SearchPack.module.css","components/main/UI/common/Paginator/Paginator.module.css","components/main/UI/pages/Login/LogInPage.module.css","components/main/UI/pages/RefreshPassword/RefreshPassword.module.css","components/main/UI/pages/newPassword/NewPassword.module.css","components/main/UI/pages/LearnCards/LearnCards.module.css","components/main/UI/pages/Registration/Registration.module.css","components/main/UI/pages/Profile/Profile.module.css","components/main/UI/common/loader/loader.module.css","components/main/UI/common/input/Input.module.css","components/main/UI/common/button/Button.module.css","components/main/UI/header/Header.tsx","components/main/UI/common/input/Input.tsx","components/main/UI/common/button/Button.tsx","components/main/UI/pages/Profile/Profile.tsx","components/main/UI/common/Preloader/Preloder.tsx","components/main/UI/pages/RefreshPassword/RefreshPassword.tsx","components/main/DAL/authAPI.ts","components/main/BLL/forgot-reduser.ts","components/main/UI/pages/RefreshPassword/RefreshPasswordContainer.tsx","components/main/UI/pages/newPassword/NewPassword.tsx","components/main/BLL/newPassword-reduser.ts","components/main/UI/pages/newPassword/NewPasswordContainer.tsx","components/main/UI/pages/Login/LogInPage.tsx","components/main/BLL/common/cookies.ts","components/main/BLL/login-reduser.ts","components/main/UI/common/loader/LoaderComponent.tsx","components/main/UI/pages/Login/LogInPageContainer.tsx","components/main/UI/pages/Registration/Registration.tsx","components/main/BLL/register-reduser.ts","components/main/UI/pages/Registration/RegistrationContainer.tsx","components/main/DAL/cards/cardsPackAPI.ts","components/main/BLL/cardsRedusers/cardsPack-reduser.ts","components/main/UI/common/Table/Table.tsx","components/main/UI/common/Paginator/Paginator.tsx","components/main/UI/common/moduls/windowModules/UniversalModule.tsx","components/main/UI/common/moduls/buttonUp/buttonUp.tsx","components/main/UI/common/SearchPack/SearchPack.tsx","components/main/UI/common/moduls/windowModules/updatePackModule/updatePackModule.tsx","components/main/UI/common/moduls/windowModules/deleteModule/deleteModule.tsx","components/main/UI/pages/Cards/CardsPack/ContainerModulePack/ContainerModulePack.tsx","components/main/UI/pages/Cards/CardsPack/CardsPackFilters.tsx","components/main/UI/pages/Cards/CardsPack/CardsPack.tsx","components/main/DAL/cards/cardsAPI.ts","components/main/BLL/cardsRedusers/cards-reduser.ts","components/main/UI/common/moduls/windowModules/updateCardModule/updateCardModule.tsx","components/main/UI/pages/Cards/Cards/ContainerModuleCards/ContainerModuleCards.tsx","components/main/UI/pages/Cards/Cards/Cards.tsx","components/main/UI/pages/LearnCards/LearnCards.tsx","components/main/UI/pages/LearnCards/LearnCardsContainer.tsx","App.tsx","serviceWorker.ts","components/main/BLL/redux-store.ts","index.tsx"],"names":["module","exports","Header","isSuccess","useSelector","store","login","className","styles","header","to","rout","CustomInput","props","onEnter","error","restProps","inputClass","type","onKeyPress","event","key","Button","buttonClass","Profile","baseSettings","container","Preloader","ForgotPassword","isFetching","unError","messageError","onClickForgotPassword","useState","email","setEmail","forgot","fagotForm","onSubmit","action","placeholder","onChange","e","target","value","disabled","instance","axios","create","baseURL","authAPI","password","rememberMe","post","html","html2","newPass","id","resetPasswordToken","initialState","actions","ForgotPasswordContainer","dispatch","useDispatch","a","res","data","success","info","accepted","response","forgotPasswordSuccess","NewPassword","onClickNewPassword","newPassForm","NewPasswordContainer","useParams","pass","newPasswordSuccess","LoginPage","setUser","logIn","currentTarget","setPassword","checkbox","checked","setRememberMe","forgotPass","setCookie","name","token","tokenDeathTime","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","isError","isLoading","Loader","position","loader","LoginPageContainer","getState","then","Math","floor","console","Registration","onInputPasswordChange","registration","inputArea","addUser","map","buttons","RegistrationContainer","passwordRepeat","setPasswordRepeat","isPasswordSame","setSamePassword","useEffect","register","cardsPackAPI","pageCount","page","get","cardsPack","newPackName","idPack","put","_id","delete","inputValue","number","filter","cards","cardsTotalCount","maxGrade","minGrade","newCardsPack","newPack","cardPacksTotalCount","setNewPage","cardPacks","searchPackByFilter","d","Table","model","headerStyle","tableStyle","rowsStyle","rowStyle","style","display","flexFlow","alignItems","justifyContent","width","padding","margin","border","borderRadius","m","index","title","dataItem","dataIndex","borderBottom","modelIndex","render","Paginator","setValue","ceil","pages","i","push","showArrowRight","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","select","Number","paginatorArrow","onClick","p","selectedPage","onPageChange","Module","top","height","left","show","enableBackground","background","opacity","zIndex","backgroundStyle","backgroundOnClick","color","modalStyle","modalOnClick","children","ModuleUp","speed","setShow","handleScroll","window","pageYOffset","addEventListener","step","lastState","innerTimer","setInterval","clearInterval","scroll","SearchPack","search","setSearch","head","searchTyping","addCardPack","alert","UpdatePackModule","packName","setPackName","showModule","ChangePack","DeleteModule","moduleName","onDeletePack","ContainerModulePack","showUpdateModule","setShowUpdateModule","showDeleteModule","setShowDeleteModule","updatedCardsPack","changeCardPack","CardsPackFilters","searchFilter","CardsPack","rating","grade","cardsAPI","packId","question","answer","card","cardsPack_id","cardId","newCard","idCard","loadCardsData","UpdateCardModule","cardQuestion","setQuestion","cardAnswer","setAnswer","ChangeCard","ContainerModuleCards","deletedCard","updatedCard","updateCard","Cards","valueAnswerSearch","setAnswerValueSearch","valueQuestionSearch","setQuestionValueSearch","valueSearch","setValueSearch","state","LearnCards","isChecked","setIsChecked","g","boxShadow","v1","LearnCardsContainer","first","setFirst","shots","created","updated","__v","length","sum","reduce","acc","rand","random","newSum","getCard","App","exact","path","component","Boolean","location","hostname","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","unregister","catch","message"],"mappings":"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","file":"static/js/main.5092684c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsPack_container__uJx7h\",\"searchTyping\":\"CardsPack_searchTyping__1oawE\",\"head\":\"CardsPack_head__16Z14\",\"cards\":\"CardsPack_cards__31Zl2\",\"buttons\":\"CardsPack_buttons__JlVHB\",\"regularButton\":\"CardsPack_regularButton__2fi38\",\"add\":\"CardsPack_add__1PCqi\",\"card\":\"CardsPack_card__4TJlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__O_PC8\",\"rout\":\"Header_rout__17_vR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"updatePack_window__23Ayh\",\"buttons\":\"updatePack_buttons__18h0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTyping\":\"SearchPack_searchTyping__teGvi\",\"head\":\"SearchPack_head__3VfG-\",\"buttons\":\"SearchPack_buttons__ElNQT\",\"regularButton\":\"SearchPack_regularButton__pdXvU\",\"searchFilter\":\"SearchPack_searchFilter__f44WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__ofKqa\",\"select\":\"Paginator_select__TXZcR\",\"pages\":\"Paginator_pages__3sYDn\",\"selectedPage\":\"Paginator_selectedPage__1XNZk\",\"paginatorArrow\":\"Paginator_paginatorArrow__1C_g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LogInPage_container__1qDBs\",\"logIn\":\"LogInPage_logIn__2Zlu_\",\"checkbox\":\"LogInPage_checkbox__2tGba\",\"forgotPass\":\"LogInPage_forgotPass__2eiLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot\":\"RefreshPassword_forgot__2Udrk\",\"fagotForm\":\"RefreshPassword_fagotForm__3ARDu\",\"error\":\"RefreshPassword_error__8cZD5\",\"unError\":\"RefreshPassword_unError__3Ulfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPass\":\"NewPassword_newPass__2J3cK\",\"newPassForm\":\"NewPassword_newPassForm__nNccJ\",\"error\":\"NewPassword_error__CSJfB\",\"unError\":\"NewPassword_unError__3Vvab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LearnCards_container__-q7DC\",\"module\":\"LearnCards_module__162dw\",\"buttons\":\"LearnCards_buttons__2OUZh\",\"answer\":\"LearnCards_answer__2ZtQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registration_container__3D76H\",\"inputArea\":\"Registration_inputArea__3LrSc\",\"buttons\":\"Registration_buttons__3aqbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseSettings\":\"Profile_baseSettings__1X-89\",\"container\":\"Profile_container__reze-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"loader_position__3TIlB\",\"loader\":\"loader_loader__12zZj\",\"spin\":\"loader_spin__2Qqd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputClass\":\"Input_inputClass__39JiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"regularButton\":\"Button_regularButton__Dewfh\",\"deleteButton\":\"Button_deleteButton__1ZXBy\",\"smallButton\":\"Button_smallButton__3Gc4V\",\"bigButton\":\"Button_bigButton__3UWRs\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../BLL/redux-store\";\r\n\r\nconst Header = () => {\r\n\r\n    const {isSuccess} = useSelector((store: AppStateType) => store.login)\r\n\r\n    return <div className={styles.header}>\r\n        {isSuccess ?\r\n            <>  <NavLink to=\"/\" className={styles.rout}> Profile </NavLink>\r\n                <NavLink to=\"/cards/pack\" className={styles.rout}> Cards </NavLink>\r\n                <NavLink to=\"/learn-cards\" className={styles.rout}> Learn cards </NavLink>\r\n                <div className={styles.rout}> LogOut</div>\r\n            </>\r\n            :\r\n            <>\r\n                <NavLink to=\"/login\" className={styles.rout}> Login </NavLink>\r\n                <NavLink to=\"/registration\" className={styles.rout}> Registration </NavLink>\r\n                <NavLink to=\"/refreshPassword\" className={styles.rout}> Remind password </NavLink>\r\n                <NavLink to=\"/set-new-password/:id\" className={styles.rout}> New password </NavLink>\r\n            </>}\r\n    </div>\r\n}\r\n\r\nexport default Header\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: () => void, error?: string };\r\n\r\nconst CustomInput = (props: InputPropsType) => {\r\n    const {onEnter, error, ...restProps} = props;\r\n\r\n    const onClickEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (onEnter && event.key === \"Enter\") {\r\n            onEnter()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input className={styles.inputClass} {...restProps} type=\"text\" onKeyPress={onClickEnter}/>\r\n            {error ? <span>{error}</span> : ''}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CustomInput;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './Button.module.css';\r\n\r\ntype   ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    &\r\n    { buttonClass: \"regularButton\" | 'deleteButton' | \"smallButton\" | 'bigButton'}\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n    const {...restProps} = props;\r\n    return (\r\n        <button className={styles[props.buttonClass]} {...restProps}/>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\n\r\ntype PropsType = {}\r\n\r\n\r\nconst Profile = (props: PropsType) => {\r\n    return <div className={styles.baseSettings}>\r\n        <div>Basic style for button and input</div>\r\n        <div className={styles.container}>\r\n            <CustomInput/>\r\n            <Button buttonClass={'regularButton'}>Submit</Button>\r\n            <Button buttonClass={'deleteButton'}>Delete</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n\r\n  return <span>Loading....</span>\r\n\r\n}\r\n\r\nexport default Preloader;","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './RefreshPassword.module.css';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport Preloader from \"../../common/Preloader/Preloder\";\r\n\r\ntype PropsType = {\r\n    onClickForgotPassword: (email: string) => void\r\n    isFetching: boolean\r\n    error: boolean\r\n    unError: boolean\r\n    messageError: string\r\n}\r\n\r\n\r\nconst ForgotPassword: React.FC<PropsType> = ({isFetching, error, unError, messageError, onClickForgotPassword}) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const handleSubmit = () => {\r\n        onClickForgotPassword(email)\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    return <div className={styles.forgot}>\r\n        <h3>Refresh Password</h3>\r\n        {isFetching ? <Preloader/> : null}\r\n        {error\r\n            ? <span className={styles.error}>{messageError}</span>\r\n            : null\r\n        }\r\n        {unError\r\n            ? <span className={styles.unError}>Success</span>\r\n            : null\r\n        }\r\n        <form className={styles.fagotForm} onSubmit={handleSubmit} action=\"\">\r\n            <CustomInput placeholder=\"Email\" onChange={handleChange} value={email}/>\r\n            <Button disabled={isFetching} buttonClass={\"regularButton\"}>Submit</Button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default ForgotPassword\r\n","import axios from 'axios'\r\n\r\n export const instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n})\r\n\r\nexport const authAPI = {\r\n    logIn(email: string, password: string, rememberMe: boolean) {\r\n        return (\r\n            instance.post<LoginResponseType>(`/auth/login`,\r\n                {\r\n                    email: email,\r\n                    password: password,\r\n                    rememberMe: rememberMe\r\n                }\r\n            )\r\n        )\r\n    },\r\n    registration(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>(\"/auth/register\",\r\n            {\r\n                email: email,\r\n                password: password\r\n            }\r\n        )\r\n    },\r\n    forgotPass(email: string) {\r\n        return instance.post<ApiType>(\"auth/forgot\", {\r\n            email: email,\r\n            html: \"<a href='http://localhost:3000/#/newPassword'\",\r\n            html2: \"http://localhost:3000/?#/newPassword</a>\"\r\n        })\r\n\r\n    },\r\n    newPass(newPass: string, id: string) {\r\n        return instance.post<ApiType>(\"auth/set-new-password\", {\r\n            resetPasswordToken: id,\r\n            password: newPass\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//__________ Types ______________\r\n\r\ntype LoginResponseType = {\r\n    email: string\r\n    name: string\r\n    isAdmin: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    __v: number\r\n    _id: string\r\n    success: boolean\r\n    error: string\r\n    in: string\r\n}\r\n\r\n\r\ntype RegisterResponseType = {\r\n    addedUser: {\r\n        email: string,\r\n        isAdmin: boolean,\r\n        __v: number,\r\n        _id: string\r\n    },\r\n    success: boolean,\r\n    error: string\r\n}\r\n\r\n\r\ntype ApiType = {\r\n    info: { accepted: string }\r\n    password: string\r\n    success: boolean\r\n    config: {\r\n        data: string\r\n    }\r\n}\r\n","\r\nimport {baseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport { authAPI } from \"../DAL/authAPI\";\r\n\r\nconst initialState = {\r\n    email: \" \",\r\n    isFetching: false,\r\n    error: false,\r\n    unError: false,\r\n    messageError: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const forgotReducer = (state: InitialStateType = initialState, action: ForgotActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/forgot/SET_EMAIL\":\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                unError: true,\r\n            }\r\n        case \"cards/forgot/TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case \"cards/forgot/ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                messageError: action.messageError\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ForgotActionType = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    forgotPassword: (email: string) => ({type: \"cards/forgot/SET_EMAIL\", email} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: \"cards/forgot/TOGGLE_IS_FETCHING\", isFetching} as const),\r\n    changeError: (error: boolean, messageError: string) => ({type: \"cards/forgot/ERROR\", error, messageError} as const)\r\n}\r\n\r\ntype thunkType = baseThunkType<ForgotActionType>\r\n\r\nexport const forgotPasswordSuccess = (email: string): thunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    try {\r\n        const res = await authAPI.forgotPass(email)\r\n        if (res.data.success) dispatch(actions.forgotPassword(res.data.info.accepted[0]))\r\n    } catch (e) {\r\n        dispatch(actions.changeError(true, e.response.data.error))\r\n    }\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ForgotPassword from \"./RefreshPassword\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordSuccess} from \"../../../BLL/forgot-reduser\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\n\r\nconst ForgotPasswordContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isFetching, error, unError, messageError} = useSelector((store: AppStateType) => store.forgot)\r\n\r\n    const onClickForgotPassword = (email: string) => {\r\n        dispatch(forgotPasswordSuccess(email))\r\n    }\r\n\r\n    return <ForgotPassword error={error}\r\n                           unError={unError}\r\n                           isFetching={isFetching}\r\n                           messageError={messageError}\r\n                           onClickForgotPassword={onClickForgotPassword}/>\r\n\r\n}\r\n\r\nexport default ForgotPasswordContainer\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport Preloader from \"../../common/Preloader/Preloder\";\r\nimport styles from \"./NewPassword.module.css\";\r\n\r\ntype PropsType = {\r\n    onClickNewPassword: (newPass: string) => void\r\n    isFetching: boolean\r\n    error: boolean\r\n    unError: boolean\r\n    messageError: string\r\n}\r\n\r\n\r\nconst NewPassword: React.FC<PropsType> = ({onClickNewPassword, isFetching, error, unError, messageError}) => {\r\n\r\n    const [newPass, setEmail] = useState(\"\")\r\n\r\n    const handleSubmit = () => {\r\n        onClickNewPassword(newPass)\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    return <div className={styles.newPass}>\r\n        <h3>New Password</h3>\r\n        {isFetching ? <Preloader/> : null}\r\n        {error\r\n            ? <span className={styles.error}>{messageError}</span>\r\n            : null\r\n        }\r\n        {unError\r\n            ? <span className={styles.unError}>Success</span>\r\n            : null\r\n        }\r\n        <form className={styles.newPassForm} onSubmit={handleSubmit} action=\"\">\r\n            <CustomInput placeholder=\"Password\" onChange={handleChange} value={newPass}/>\r\n            <Button disabled={isFetching} buttonClass={\"regularButton\"}>Submit</Button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default NewPassword\r\n","import {authAPI} from \"../DAL/authAPI\";\r\nimport {baseThunkType, InferActionsTypes} from \"./redux-store\";\r\n\r\nconst initialState = {\r\n    password: \" \",\r\n    isFetching: false,\r\n    error: false,\r\n    unError: false,\r\n    messageError: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: NewPassActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/newPassword/UPDATE_PASSWORD\":\r\n            return {\r\n                ...state,\r\n                password: action.password,\r\n                unError: true\r\n            }\r\n        case \"cards/newPassword/TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case \"cards/newPassword/ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                messageError: action.messageError\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype NewPassActionType = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    newPassword: (password: string) => ({type: \"cards/newPassword/UPDATE_PASSWORD\", password} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: \"cards/newPassword/TOGGLE_IS_FETCHING\", isFetching} as const),\r\n    changeError: (error: boolean, messageError: string) => ({\r\n        type: \"cards/newPassword/ERROR\",\r\n        error,\r\n        messageError\r\n    } as const)\r\n}\r\n\r\ntype thunkType = baseThunkType<NewPassActionType>\r\n\r\nexport const newPasswordSuccess = (pass: string, id: string): thunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n\r\n    try {\r\n        const res = await authAPI.newPass(pass, id)\r\n        if (res.data.success) dispatch(actions.newPassword(pass))\r\n    } catch (e) {\r\n        dispatch(actions.changeError(true, e.response.data.error))\r\n    }\r\n\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport NewPassword from \"./NewPassword\";\r\nimport {newPasswordSuccess} from \"../../../BLL/newPassword-reduser\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\n\r\nconst NewPasswordContainer = () => {\r\n\r\n    let {id} = useParams()\r\n    const dispatch = useDispatch()\r\n    const {isFetching, error, unError, messageError} = useSelector((store: AppStateType) => store.newPass)\r\n\r\n    const onClickNewPassword = (newPass: string) => {\r\n        dispatch(newPasswordSuccess(newPass, id))\r\n    }\r\n\r\n    return <NewPassword error={error}\r\n                        unError={unError}\r\n                        messageError={messageError}\r\n                        isFetching={isFetching}\r\n                        onClickNewPassword={onClickNewPassword}/>\r\n}\r\n\r\nexport default NewPasswordContainer\r\n","import React, {ChangeEvent} from 'react';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport styles from './LogInPage.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (value: string) => void\r\n    password: string\r\n    setPassword: (value: string) => void\r\n    rememberMe: boolean\r\n    setRememberMe: (value: boolean) => void\r\n    setUser: () => void\r\n    isLoading: boolean\r\n    isError: boolean\r\n}\r\n\r\n\r\nconst LoginPage = (props: PropsType) => {\r\n    const onSubmit = () => {\r\n        props.setUser()\r\n    }\r\n\r\n    const onInputMailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onInputPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setRememberMe(e.currentTarget.checked)\r\n    }\r\n    return (\r\n        <form className={styles.container} onSubmit={onSubmit}>\r\n            <h3>Log in</h3>\r\n            <div className={styles.logIn}>\r\n                <CustomInput type=\"email\" placeholder='Email' value={props.email} onChange={onInputMailChange}/>\r\n                <CustomInput type='password' placeholder='Password' value={props.password}\r\n                             onChange={onInputPasswordChange}/>\r\n            </div>\r\n            <div className={styles.checkbox}>\r\n                <input type='checkbox' checked={props.rememberMe as boolean} onChange={onCheckboxChange}/>\r\n                <div>Remember me</div>\r\n            </div>\r\n            <Button buttonClass=\"regularButton\">Log in</Button>\r\n            <NavLink to={'/refreshPassword'} className={styles.forgotPass}>Forgot password?</NavLink>\r\n            <NavLink to={'/registration'} className={styles.forgotPass}>I don`t have an account</NavLink>\r\n        </form>)\r\n\r\n}\r\nexport default LoginPage\r\n","export const setCookie = (name: string, token: string| null, tokenDeathTime: number) => {\r\n    document.cookie = `${name}=${token};max-age=${tokenDeathTime};path=/`;\r\n};\r\n\r\nexport const setTokenInCookie = (token: string | null, tokenDeathTime: number) => {\r\n    setCookie('token', token, Math.floor(tokenDeathTime / 1000) - 180);\r\n}\r\n\r\nexport const getCookie = (name: string): string | null => {\r\n    const matches = document.cookie.match(new RegExp(\r\n        '(?:^|; )' + name.replace(/([.$?*|{}()\\]\\\\^])/g, '\\\\$1') + '=([^;]*)'\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : null;\r\n};\r\n","import {AppStateType, baseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {authAPI} from \"../DAL/authAPI\";\r\nimport {setTokenInCookie} from \"./common/cookies\";\r\n\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isSuccess: false,\r\n    isError: false,\r\n    isLoading: false,\r\n    token: '',\r\n    rememberMe: false\r\n}\r\n\r\n\r\nexport const loginReducer = (state = initialState, action: LoginActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'loginReducer/IS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isSuccess: action.value,\r\n                isError: false,\r\n                isLoading: false,\r\n                token: action.token\r\n            }\r\n        case 'loginReducer/IS_ERROR':\r\n            return {\r\n                ...state,\r\n                isError: action.value,\r\n                isSuccess: false,\r\n                isLoading: false\r\n            }\r\n        case 'loginReducer/IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n//____________ Actions________________\r\n\r\ntype LoginActionType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst actions = {\r\n    isSuccess: (value: boolean, token: string) => ({\r\n        type: 'loginReducer/IS_SUCCESS',\r\n        value,\r\n        token\r\n    } as const),\r\n    isError: (value: boolean) => ({type: 'loginReducer/IS_ERROR', value} as const),\r\n    isLoading: (value: boolean) => ({type: 'loginReducer/IS_LOADING', value} as const)\r\n}\r\n\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<LoginActionType>\r\n\r\nexport const logIn = (email: string, password: string, rememberMe: boolean): thunkType => async (dispatch, getState: () => AppStateType) => {\r\n    try {\r\n        dispatch(actions.isLoading(true))\r\n        const res = await authAPI.logIn(email, password, rememberMe)\r\n            .then(data => data.data)\r\n        setTokenInCookie(res.token, res.tokenDeathTime)\r\n        dispatch(actions.isSuccess(true, res.token))\r\n    } catch (e) {\r\n        dispatch(actions.isError(true))\r\n        console.error(e)\r\n    }\r\n}\r\n","import React from 'react'\r\nimport styles from './loader.module.css'\r\n\r\nconst Loader = () => {\r\n    return <div className={styles.position}>\r\n        <div className={styles.loader}/>\r\n        <div>Loading...</div>\r\n    </div>\r\n}\r\n\r\nexport default Loader\r\n","import React, {useState} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport LoginPage from \"./LogInPage\";\r\nimport {logIn} from \"../../../BLL/login-reduser\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\nimport Loader from \"../../common/loader/LoaderComponent\";\r\n\r\n\r\nconst LoginPageContainer = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setUser = () => {\r\n        dispatch(logIn(email, password, rememberMe))\r\n        setEmail('')\r\n        setPassword('')\r\n        setRememberMe(false)\r\n    }\r\n    const {isLoading, isSuccess, isError} = useSelector((store: AppStateType) => store.login)\r\n\r\n    if (isSuccess) {\r\n        return <Redirect to={\"/\"}/>\r\n    } else {\r\n        return <>\r\n            {isLoading ? <Loader/> : <LoginPage email={email}\r\n                                                setEmail={setEmail}\r\n                                                password={password}\r\n                                                setPassword={setPassword}\r\n                                                isError={isError}\r\n                                                rememberMe={rememberMe}\r\n                                                setRememberMe={setRememberMe}\r\n                                                setUser={setUser}\r\n                                                isLoading={isLoading}/>\r\n            }\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nexport default LoginPageContainer\r\n","import React, {ChangeEvent} from 'react';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport styles from \"./Registration.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (text: string) => void\r\n    password: string\r\n    setPassword: (text: string) => void\r\n    addUser: () => void\r\n    passwordRepeat: string\r\n    setPasswordRepeat: (text: string) => void\r\n    isPasswordSame: boolean\r\n    isLoading: boolean\r\n    isError: boolean\r\n}\r\n\r\n\r\nconst Registration = (props: PropsType) => {\r\n\r\n    const onRegisterClick = () => {\r\n        props.addUser()\r\n    }\r\n\r\n    const onInputMailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onInputPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const registration = [\r\n        {name: \"Email\", placeholder: 'Enter your Email...', type: 'email', onChange: onInputMailChange},\r\n        {name: \"Password\", placeholder: 'Enter your password...', type: 'password', onChange: onInputPasswordChange},\r\n        {name: \"Confirm Password\", placeholder: 'Enter your password confirmation...', onChange: onInputPasswordChange},\r\n    ]\r\n\r\n    return <div className={styles.container}>\r\n        <h3>Registration</h3>\r\n        <form className={styles.inputArea} onSubmit={onRegisterClick}>\r\n            {\r\n                registration.map(data => <div>\r\n                    <div>{data.name}</div>\r\n                    <CustomInput placeholder={data.placeholder} type={data.type} onChange={data.onChange}/>\r\n                </div>)\r\n            }\r\n            <div className={styles.buttons}>\r\n                <Button buttonClass={'regularButton'}>Sign up</Button>\r\n                <NavLink to={\"/\"}><Button buttonClass={'deleteButton'}>Cancel</Button></NavLink>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default Registration\r\n","import {AppStateType, baseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {authAPI} from \"../DAL/authAPI\";\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isSuccess: false,\r\n    isError: false,\r\n    isLoading: false\r\n\r\n}\r\n\r\n\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"registerReducer/REGISTER_IS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isSuccess: action.value\r\n            };\r\n        case \"registerReducer/REGISTER_IS_ERROR\":\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: true\r\n            };\r\n        case \"registerReducer/REGISTER_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// __________________ Actions __________________\r\n\r\ntype RegisterActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    registerIsSuccess: (value: boolean) => ({type: \"registerReducer/REGISTER_IS_SUCCESS\", value} as const),\r\n    registerIsError: () => ({type: \"registerReducer/REGISTER_IS_ERROR\"} as const),\r\n    registerIsLoading: () => ({type: \"registerReducer/REGISTER_IS_LOADING\"} as const),\r\n\r\n}\r\n\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<RegisterActionsType>\r\n\r\nexport const registration = (email: string, password: string): thunkType => async (dispatch, getState: () => AppStateType) => {\r\n    try {\r\n        dispatch(actions.registerIsLoading)\r\n        const res = await authAPI.registration(email, password)\r\n        if (res.data.success) dispatch(actions.registerIsSuccess(true))\r\n    } catch (e) {\r\n        dispatch(actions.registerIsError())\r\n        console.error(e)\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Registration from \"./Registration\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {registration} from \"../../../BLL/register-reduser\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\nimport Loader from \"../../common/loader/LoaderComponent\";\r\n\r\n\r\nconst RegistrationContainer = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [passwordRepeat, setPasswordRepeat] = useState<string>('');\r\n    const [isPasswordSame, setSamePassword] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (passwordRepeat === password) setSamePassword(true)\r\n        else setSamePassword(false)\r\n    }, [passwordRepeat]);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addUser = () => {\r\n        dispatch(registration(email, password));\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n    };\r\n\r\n    const {isLoading, isSuccess, isError} = useSelector((store: AppStateType) => store.register);\r\n\r\n    if (isSuccess) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return <>\r\n        {isLoading ? <Loader/> :\r\n            <Registration email={email} setEmail={setEmail} password={password} setPassword={setPassword}\r\n                          passwordRepeat={passwordRepeat} setPasswordRepeat={setPasswordRepeat}\r\n                          isPasswordSame={isPasswordSame}\r\n                          addUser={addUser} isLoading={isLoading} isError={isError}/>}\r\n    </>\r\n}\r\n\r\nexport default RegistrationContainer\r\n","import axios from 'axios'\r\nimport {CardPackType} from \"../../BLL/cardsRedusers/cardsPack-reduser\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n})\r\n\r\ntype GetApiType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype AddApiType = {\r\n    newCardsPack: CardPackType\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype UpdateApiType = {\r\n    updatedCardsPack: CardPackType\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype DeleteApiType = {\r\n    token: string | null\r\n    tokenDeathTime: number\r\n\r\n}\r\n\r\nexport const cardsPackAPI = {\r\n    getPack(token: string | null, pageCount: number = 4, page: number = 1,) {\r\n        return instance.get<GetApiType>(`cards/pack?token=${token}&pageCount=${pageCount}&page=${page}`).then(res => res.data)\r\n    },\r\n    addPack(token: string | null, value?: string) {\r\n        return instance.post<AddApiType>(`cards/pack`, {\r\n            cardsPack: {\r\n                name: value\r\n            },\r\n            token\r\n        })\r\n    },\r\n    updatePack(newPackName: string, idPack: string, token: string | null) {\r\n        return instance.put<UpdateApiType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id: idPack,\r\n                name: newPackName\r\n            },\r\n            token\r\n        })\r\n    },\r\n    deletePack(idPack: string, token: string | null) {\r\n        return instance.delete<DeleteApiType>(`/cards/pack?token=${token}&id=${idPack}`)\r\n    },\r\n    searchPack(token: string | null, inputValue: string,) {\r\n        return instance.get<GetApiType>(`/cards/pack?token=${token}&packName=${inputValue}`)\r\n    },\r\n    setPage(token: string, currentPage: number) {\r\n        return instance.get<GetApiType>(`cards/pack?&token=${token}&page=${currentPage}`)\r\n    },\r\n    sortPacksByFilter(token: string | null, number?: string, filter?: string) {\r\n        return instance.get<GetApiType>\r\n        (`cards/pack?&token=${token}&sortPacks=${number}${filter}`);\r\n    }\r\n}\r\n\r\n\r\n","import {baseThunkType, InferActionsTypes} from \"../redux-store\";\r\nimport {cardsPackAPI} from \"../../DAL/cards/cardsPackAPI\";\r\nimport {getCookie, setCookie} from \"../common/cookies\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string,\r\n    name: string,\r\n    path: string,\r\n    grade: number,\r\n    shots: number,\r\n    rating: number,\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n\r\nexport type CardsPacksType = {\r\n    cards: Array<CardPackType>,\r\n    cardsTotalCount: number,\r\n    maxGrade: string,\r\n    minGrade: number,\r\n    page: number\r\n    pageCount: number,\r\n    token: string | null,\r\n    tokenDeathTime: number,\r\n    isLoading: boolean\r\n}\r\n\r\nlet initialState: CardsPacksType = {\r\n    cards: [],\r\n    cardsTotalCount: 0,\r\n    maxGrade: '',\r\n    minGrade: 0,\r\n    page: 0,\r\n    pageCount: 0,\r\n    token: '',\r\n    tokenDeathTime: 0,\r\n    isLoading: false,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const cardsPackReducer = (state = initialState, action: CardsPackActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'cardsPackReducer/LOAD_DATA':\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                token: action.token,\r\n                isLoading: false\r\n            }\r\n        case \"cardsPackReducer/IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.value,\r\n\r\n            }\r\n        case \"cardsPackReducer/ADD_CARD_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: [action.newCardsPack, ...state.cards],\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/UPDATE_CARD_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.idPack ? {...card, ...action.newPack} : card),\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/DELETE_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card._id !== action.idPack),\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/SEARCH_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/GET_DATA\":\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                cardsTotalCount: action.cardPacksTotalCount,\r\n                page: action.page,\r\n                pageCount: action.pageCount,\r\n                token: action.token,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype CardsPackActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    loadData: (cards: Array<CardPackType>, token: string | null) => ({\r\n        type: 'cardsPackReducer/LOAD_DATA',\r\n        cards,\r\n        token\r\n    } as const),\r\n    isLoading: (value: boolean) => ({type: 'cardsPackReducer/IS_LOADING', value} as const),\r\n    addCardPackSuccess: (newCardsPack: CardPackType, token: string | null) => ({\r\n        type: 'cardsPackReducer/ADD_CARD_PACK',\r\n        newCardsPack,\r\n        token\r\n    } as const),\r\n    changeCardPackSuccess: (idPack: string, newPack: CardPackType, token: string | null) => ({\r\n        type: 'cardsPackReducer/UPDATE_CARD_PACK',\r\n        idPack,\r\n        newPack,\r\n        token\r\n    } as const),\r\n    deleteCardPackSuccess: (idPack: string, token: string | null) => ({\r\n        type: 'cardsPackReducer/DELETE_PACK',\r\n        idPack,\r\n        token\r\n    } as const),\r\n    searchedPack: (cards: Array<CardPackType>, token: string | null) => ({\r\n        type: 'cardsPackReducer/SEARCH_PACK',\r\n        cards,\r\n        token\r\n    } as const),\r\n    getData: (cards: Array<CardPackType>, cardPacksTotalCount: number, page: number, pageCount: number, token: string | null) => ({\r\n        type: 'cardsPackReducer/GET_DATA',\r\n        cards,\r\n        cardPacksTotalCount,\r\n        page,\r\n        pageCount,\r\n        token\r\n    } as const),\r\n}\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<CardsPackActionsTypes>\r\n\r\nexport const loadCardsPackData = (): thunkType => async (dispatch) => {\r\n    dispatch(actions.isLoading(true))\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsPackAPI.getPack(token)\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.getData(data.cardPacks, data.cardPacksTotalCount, data.page, data.pageCount, data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const setNewPage = (pageCount: number, page?: number): thunkType => async (dispatch) => {\r\n\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsPackAPI.getPack(token, pageCount, page)\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.getData(data.cardPacks, data.cardPacksTotalCount, data.page, data.pageCount, data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const addCardPack = (value: string): thunkType => async (dispatch) => {\r\n\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.addPack(token, value)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.addCardPackSuccess(res.data.newCardsPack, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const changeCardPack = (idPack: string, newPackName: string): thunkType => async (dispatch) => {\r\n\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.updatePack(newPackName, idPack, token)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.changeCardPackSuccess(idPack, res.data.updatedCardsPack, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const deleteCardPack = (idPack: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.deletePack(idPack, token)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.deleteCardPackSuccess(idPack, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const showSearchedPack = (inputValue: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.searchPack(token, inputValue)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.loadData(res.data.cardPacks, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n\r\n}\r\nexport const searchPackByFilter = (number?: string, filter?: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.sortPacksByFilter(token, number, filter).then(d => d.data)\r\n        setCookie('token', res.token, Math.floor(res.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.searchedPack(res.cardPacks, token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\n","import React, {CSSProperties, ReactNode} from 'react';\r\n\r\n\r\nexport interface ITableModel {\r\n    title: (index: number) => ReactNode;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\r\n    // render: (dataItem: CardPackType | CardType, modelIndex: number, dataIndex: number) => ReactNode;\r\n}\r\n\r\ninterface ITableProps {\r\n    model: ITableModel[];\r\n    data: any\r\n    // data: Array<CardPackType> | Array<CardType>\r\n\r\n    headerStyle?: CSSProperties,\r\n    tableStyle?: CSSProperties,\r\n    rowsStyle?: CSSProperties,\r\n    rowStyle?: CSSProperties,\r\n}\r\n\r\nconst Table: React.FC<ITableProps> = (\r\n    {\r\n        model,\r\n        data,\r\n\r\n        headerStyle,\r\n        tableStyle,\r\n        rowsStyle,\r\n        rowStyle,\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexFlow: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                width: '85%',\r\n                ...tableStyle,\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    padding: \"20px 0\",\r\n                    margin: \"20px\",\r\n                    border: '1px solid black',\r\n                    borderRadius: \"5px\",\r\n                    width: '90%',\r\n                    display: 'flex',\r\n                    flexFlow: 'row',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                    ...headerStyle,\r\n                }}\r\n            >\r\n                {model.map((m: ITableModel, index: number) => m.title(index))}\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    borderRadius: \"5px\",\r\n                    border: '1px solid black',\r\n                    width: '90%',\r\n                    ...rowsStyle,\r\n                }}\r\n            >\r\n                {/*CardPackType | CardType*/}\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div\r\n                        key={dataItem._id || dataIndex}\r\n                        style={{\r\n                            borderBottom: '1px solid black',\r\n                            display: 'flex',\r\n                            flexFlow: 'row',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'space-between',\r\n                            padding: '16px',\r\n                            ...rowStyle,\r\n                        }}\r\n                    >\r\n                        {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\nimport {setNewPage} from \"../../../BLL/cardsRedusers/cardsPack-reduser\";\r\nimport styles from './Paginator.module.css';\r\n\r\nexport const Paginator = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {page, pageCount, cardsTotalCount} = useSelector((store: AppStateType) => store.cardsPack)\r\n    const [value, setValue] = useState(pageCount)\r\n\r\n    const placeholder = Math.ceil(cardsTotalCount / pageCount)\r\n    let pages = []\r\n    for (let i = 1; i <= placeholder; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const numberPages = 5\r\n\r\n    let showArrowRight = Math.ceil(placeholder / numberPages)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * numberPages + 1\r\n    const rightPortionPageNumber = portionNumber * numberPages\r\n\r\n\r\n    const handlerChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setValue(Number(e.target.value))\r\n        dispatch(setNewPage(Number(e.target.value)))\r\n    }\r\n\r\n    const onPageChange = (p: number) => {\r\n        dispatch(setNewPage(value, p))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            <div>\r\n                <select className={styles.select} value={value} onChange={handlerChange}>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"15\">15</option>\r\n                </select>\r\n\r\n            </div>\r\n            {portionNumber > 1 &&\r\n            <span className={styles.paginatorArrow} onClick={() => setPortionNumber(portionNumber - 1)}> « </span>\r\n            }\r\n            <div>\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p, index) => <span\r\n                        key={index}\r\n                        className={`${styles.pages} ${page === p && styles.selectedPage}`}\r\n                        onClick={() => onPageChange(p)}\r\n                    >{p}</span>)}\r\n            </div>\r\n            {showArrowRight > portionNumber &&\r\n\r\n            <span className={styles.paginatorArrow} onClick={()=>  setPortionNumber(portionNumber + 1)}> » </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {CSSProperties} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    height: number\r\n    width: number\r\n    show: boolean\r\n    enableBackground?: boolean\r\n    backgroundStyle?: CSSProperties\r\n    modalStyle?: CSSProperties\r\n    backgroundOnClick?: () => void\r\n    modalOnClick?: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nexport const Module = (props: PropsType) => {\r\n    const top = `calc(50vh - ${props.height / 2}px)`;\r\n    const left = `calc(50vw - ${props.width / 2}px)`;\r\n\r\n    if (!props.show) return null;\r\n\r\n    return (\r\n        <>\r\n            {props.enableBackground && <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    left: '0px',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n\r\n                    background: 'black',\r\n                    opacity: 0.35,\r\n                    zIndex: 0,\r\n\r\n                    ...props.backgroundStyle,\r\n                }}\r\n                onClick={props.backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width: props.width,\r\n                    height: props.height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    background: 'white',\r\n                    borderRadius: '30px',\r\n                    color: 'white',\r\n                    zIndex: 1,\r\n\r\n                    ...props.modalStyle,\r\n                }}\r\n                onClick={props.modalOnClick}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Module} from \"../windowModules/UniversalModule\";\r\n\r\ninterface IModalUp {\r\n    speed?: number // 1 - fast; 100 - slow\r\n}\r\n\r\nexport const ModuleUp: React.FC<IModalUp> = ({speed = 10}) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > 300) setShow(true);\r\n        else setShow(false);\r\n    };\r\n\r\n    const scroll = () => {\r\n        const step = window.pageYOffset / speed;\r\n        let lastState = window.pageYOffset;\r\n\r\n        const innerTimer = setInterval(() => {\r\n            if (lastState < window.pageYOffset) clearInterval(innerTimer);\r\n            lastState = window.pageYOffset;\r\n\r\n            window.scroll(0, lastState - step);\r\n            if (window.pageYOffset === 0) clearInterval(innerTimer);\r\n        }, 50);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Module\r\n                enableBackground={false}\r\n\r\n                width={100}\r\n                height={50}\r\n                modalOnClick={scroll}\r\n                modalStyle={{\r\n                    top: '90vh',\r\n                    left: '1100px',\r\n                    background:'#65a3be'\r\n                }}\r\n                show={show}\r\n            >\r\n                Up ↑\r\n            </Module>\r\n        </>\r\n    );\r\n};\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from './SearchPack.module.css'\r\nimport {addCardPack, showSearchedPack} from \"../../../BLL/cardsRedusers/cardsPack-reduser\";\r\nimport CustomInput from \"../input/Input\";\r\nimport Button from \"../button/Button\";\r\n\r\n\r\nconst SearchPack = () => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.currentTarget.value)\r\n    }\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const addCardsButtonClick = () => {\r\n        if (!value) {\r\n            alert(\"Введите название!!!\")\r\n        } else {\r\n            dispatch(addCardPack(value))\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    // ____________ filters for packs__________________\r\n\r\n    const searchByName = () => {\r\n        return dispatch(showSearchedPack(search))\r\n    }\r\n    return (\r\n        <>\r\n            <div className={styles.head}>\r\n                <div className={styles.searchTyping}>\r\n                    <CustomInput onChange={onChangeHandler} value={search}/>\r\n                    <Button buttonClass={'regularButton'} onClick={searchByName}>Search</Button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.head}>\r\n                <div className={styles.searchTyping}>\r\n                    <div><CustomInput onChange={onChange} value={value}/></div>\r\n                    <Button onClick={addCardsButtonClick} buttonClass={'bigButton'}>Add new cards pack</Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchPack\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {Module} from \"../UniversalModule\";\r\nimport CustomInput from \"../../../input/Input\";\r\nimport Button from \"../../../button/Button\";\r\nimport styles from './updatePack.module.css'\r\n\r\ntype PropsType = {\r\n    showModule: boolean,\r\n    packName: string,\r\n    ChangePack: (newPackName: string) => void\r\n    backgroundOnClick: () => void\r\n}\r\n\r\nexport const UpdatePackModule = (props: PropsType) => {\r\n\r\n    const [packName, setPackName] = useState(props.packName)\r\n\r\n    const onchangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPackName(e.currentTarget.value)\r\n    }\r\n\r\n    const changePack = () => {\r\n        props.ChangePack(packName)\r\n    }\r\n\r\n    return <Module height={300}\r\n                   width={400}\r\n                   show={props.showModule}\r\n                   backgroundOnClick={props.backgroundOnClick}\r\n                   enableBackground={true}>\r\n        <div className={styles.window}>\r\n            <div style={{color: 'black'}}>Change pack`s name</div>\r\n            <CustomInput\r\n                value={packName}\r\n                onChange={onchangeInput}\r\n            />\r\n            <div className={styles.buttons}>\r\n                <Button buttonClass={'regularButton'} onClick={changePack}>Add</Button>\r\n                <Button buttonClass={'deleteButton'} onClick={props.backgroundOnClick}>Cancel</Button>\r\n            </div>\r\n        </div>\r\n    </Module>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Module} from \"../UniversalModule\";\r\nimport Button from \"../../../button/Button\";\r\nimport styles from '../updatePackModule/updatePack.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    showModule: boolean\r\n    moduleName: string\r\n    onDeletePack: () => void\r\n    backgroundOnClick: () => void\r\n\r\n}\r\n\r\nexport const DeleteModule = (props: PropsType) => {\r\n\r\n    return <Module height={300}\r\n                   width={400}\r\n                   show={props.showModule}\r\n                   backgroundOnClick={props.backgroundOnClick}\r\n                   enableBackground={true}\r\n    >\r\n        <div className={styles.window} style={{height: '100px'}}>\r\n            <div style={{color: 'black'}}>Delete {props.moduleName}?</div>\r\n\r\n            <div className={styles.buttons}>\r\n                <Button\r\n                    buttonClass={'regularButton'}\r\n                    onClick={props.onDeletePack}>\r\n                    Delete\r\n                </Button>\r\n                <Button buttonClass={'deleteButton'}\r\n                        onClick={props.backgroundOnClick}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    </Module>\r\n\r\n}\r\n","import {CardPackType, changeCardPack, deleteCardPack} from \"../../../../../BLL/cardsRedusers/cardsPack-reduser\";\r\nimport React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from \"../CardsPack.module.css\";\r\nimport Button from \"../../../../common/button/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UpdatePackModule} from \"../../../../common/moduls/windowModules/updatePackModule/updatePackModule\";\r\nimport {DeleteModule} from \"../../../../common/moduls/windowModules/deleteModule/deleteModule\";\r\n\r\ntype PropsType = {\r\n    dataItem: CardPackType\r\n    dataIndex: number\r\n}\r\n\r\nexport const ContainerModulePack: React.FC<PropsType> = ({dataItem, dataIndex}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [showUpdateModule, setShowUpdateModule] = useState(false)\r\n    const [showDeleteModule, setShowDeleteModule] = useState(false)\r\n\r\n    const onDeletePack = () => {\r\n        dispatch(deleteCardPack(dataItem._id))\r\n        setShowDeleteModule(false)\r\n    }\r\n    const onChangePack = (newPackName: string) => {\r\n        dispatch(changeCardPack(dataItem._id, newPackName))\r\n        setShowUpdateModule(false)\r\n    }\r\n\r\n    return <div key={dataIndex + dataItem._id}>\r\n        <div className={styles.buttons}>\r\n            <Button\r\n                onClick={() => setShowDeleteModule(true)}\r\n                buttonClass={'deleteButton'}>\r\n                Delete\r\n            </Button>\r\n            <Button\r\n                onClick={() => setShowUpdateModule(true)}\r\n                buttonClass={'regularButton'}\r\n            >\r\n                Update\r\n            </Button>\r\n            <NavLink to={`/cards/cards/${dataItem._id}`}>\r\n                <Button buttonClass={'regularButton'}>\r\n                    Show cards\r\n                </Button>\r\n            </NavLink>\r\n            <NavLink to={`/learn-cards/${dataItem._id}`}>\r\n                <Button buttonClass={'regularButton'}>\r\n                    Learn\r\n                </Button>\r\n            </NavLink>\r\n            <Button buttonClass={'regularButton'}>Add to basket</Button>\r\n        </div>\r\n        <UpdatePackModule showModule={showUpdateModule}\r\n                          packName={dataItem.name}\r\n                          ChangePack={onChangePack}\r\n                          backgroundOnClick={() => setShowUpdateModule(false)}\r\n        />\r\n        <DeleteModule\r\n            showModule={showDeleteModule}\r\n            moduleName={'pack'}\r\n            onDeletePack={onDeletePack}\r\n            backgroundOnClick={() => {\r\n                setShowDeleteModule(false)\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n","import {searchPackByFilter} from \"../../../../BLL/cardsRedusers/cardsPack-reduser\";\r\n\r\nimport React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from \"../../../common/SearchPack/SearchPack.module.css\";\r\nimport Button from \"../../../common/button/Button\";\r\n\r\n\r\nexport const CardsPackFilters = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    // ____________ filters for packs__________________\r\n\r\n    const searchAtoZ = () => {\r\n        return dispatch(searchPackByFilter('1', 'name'))\r\n    }\r\n    const searchZtoA = () => {\r\n        return dispatch(searchPackByFilter('-1', 'name'))\r\n    }\r\n\r\n    const searchNew = () => {\r\n        return dispatch(searchPackByFilter('1', 'created'))\r\n    }\r\n    const searchOlder = () => {\r\n        return dispatch(searchPackByFilter('-1', 'created'))\r\n    }\r\n\r\n    return <div className={styles.searchFilter}>\r\n        <Button buttonClass={'smallButton'} onClick={searchAtoZ}>Search A-Z </Button>\r\n        <Button buttonClass={'smallButton'} onClick={searchZtoA}>Search Z-A </Button>\r\n        <Button buttonClass={'smallButton'} onClick={searchNew}>Search by new </Button>\r\n        <Button buttonClass={'smallButton'} onClick={searchOlder}>Search by oldest </Button>\r\n    </div>\r\n\r\n\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../BLL/redux-store\";\r\nimport styles from './CardsPack.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloder\";\r\nimport {\r\n    CardPackType,\r\n    loadCardsPackData\r\n} from '../../../../BLL/cardsRedusers/cardsPack-reduser';\r\nimport Table, {ITableModel} from \"../../../common/Table/Table\";\r\nimport {Paginator} from \"../../../common/Paginator/Paginator\";\r\nimport {ModuleUp} from \"../../../common/moduls/buttonUp/buttonUp\";\r\nimport SearchPack from \"../../../common/SearchPack/SearchPack\";\r\nimport {ContainerModulePack} from \"./ContainerModulePack/ContainerModulePack\";\r\nimport Loader from '../../../common/loader/LoaderComponent';\r\nimport {CardsPackFilters} from \"./CardsPackFilters\";\r\n\r\nconst CardsPack = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {isLoading, cards} = useSelector((store: AppStateType) => store.cardsPack)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadCardsPackData())\r\n    }, [dispatch]);\r\n\r\n    const model: Array<ITableModel> = [\r\n        {\r\n            title: (index: number) => <div key={\"names\" + index}>Names</div>,\r\n            render(dataItem: CardPackType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.name}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"rating\" + index}>Rating</div>,\r\n            render(dataItem: CardPackType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.rating}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"grade\" + index}>Grade</div>,\r\n            render(dataItem: CardPackType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.grade}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"buttons\" + index}>Buttons</div>,\r\n            render: (dataItem: CardPackType, dataIndex: number) => {\r\n                return <ContainerModulePack key={dataIndex + dataItem._id} dataItem={dataItem} dataIndex={dataIndex}/>\r\n            }\r\n        },\r\n    ]\r\n\r\n    return <div>\r\n        {isLoading ? <Loader/> :\r\n            <div className={styles.container}>\r\n                <SearchPack/>\r\n                <div style={{display: \"flex\", width:\"100%\"}}>\r\n                    <Table model={model} data={cards}/>\r\n                    <CardsPackFilters/>\r\n                </div>\r\n                <ModuleUp/>\r\n                <Paginator/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default CardsPack\r\n\r\n","import axios from \"axios\";\r\nimport {CardType} from \"../../BLL/cardsRedusers/cards-reduser\";\r\n\r\n\r\nexport type CardsResponseType = {\r\n    cards: Array<CardType>,\r\n    cardsTotalCount: number,\r\n    maxGrade: string,\r\n    minGrade: number,\r\n    page: number\r\n    pageCount: number,\r\n    token: string | null,\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n})\r\n\r\n\r\nexport const cardsAPI = {\r\n    getCards(token: string | null, packId: string, page?: number) {\r\n        return instance.get<CardsResponseType>(`cards/card?&token=${token}&cardsPack_id=${packId}&pageCount=10&page=${page}`)\r\n            .then(res => {\r\n                    return res.data\r\n                }\r\n            )\r\n    },\r\n    addCard(token: string | null, packId: string, question: string | number, answer: string | number) {\r\n        return instance.post<PostCardResponseType>('/cards/card', {\r\n            card: {cardsPack_id: packId, question: question, answer: answer},\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    updateCard(cardId: string, token: string | null, question: string, answer: string) {\r\n        return instance.put<PostPutCardsType>('/cards/card', {\r\n            card: {_id: cardId, answer: answer, question: question, grade: 0},\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    deleteCard(cardId: string, token: string | null,) {\r\n        return instance.delete<DeleteCardResponseType>(`/cards/card?token=${token}&id=${cardId}`)\r\n            .then(res => res.data)\r\n    },\r\n    searchCard(token: string | null, inputValue: string,) {\r\n        return instance.get<CardsResponseType>(`/cards/card?token=${token}&cardAnswer=${inputValue}`)\r\n    },\r\n}\r\n\r\n\r\n// ___________Types for requests_________________\r\n\r\nexport type UpdatedCardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    created: string\r\n    grade: number\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type DeleteCardResponseType = {\r\n    deletedCard: CardType\r\n    success: boolean\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\nexport type PostPutCardType = {\r\n    cardsPack_id?: string\r\n    _id?: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    type?: string\r\n}\r\n\r\n\r\nexport type PostPutCardsType = {\r\n    updatedCard: UpdatedCardType\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\nexport type PostCardResponseType = {\r\n    newCard: CardType\r\n    success: boolean\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\nexport type PutCardResponseType = {\r\n    updatedCard: CardType\r\n    success: boolean\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n","import {baseThunkType, InferActionsTypes} from \"../redux-store\";\r\nimport {cardsAPI, UpdatedCardType} from \"../../DAL/cards/cardsAPI\";\r\nimport {getCookie, setCookie} from \"../common/cookies\";\r\n\r\n\r\nexport  type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\n\r\nexport type CardsType = {\r\n    cards: Array<CardType>,\r\n    cardsTotalCount: number,\r\n    maxGrade: string,\r\n    minGrade: number,\r\n    page: number\r\n    pageCount: number,\r\n    token: string | null,\r\n    tokenDeathTime: number,\r\n    isLoading: boolean\r\n}\r\n\r\n\r\nlet initialState: CardsType = {\r\n    cards: [],\r\n    cardsTotalCount: 0,\r\n    maxGrade: '',\r\n    minGrade: 0,\r\n    page: 0,\r\n    pageCount: 0,\r\n    token: '',\r\n    tokenDeathTime: 0,\r\n    isLoading: false,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const cardsReducer = (state = initialState, action: CardsActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'cardsReducer/LOAD_DATA':\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                token: action.token,\r\n                isLoading: false\r\n            }\r\n\r\n        case \"cardsReducer/IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.value,\r\n            }\r\n        case \"cardsReducer/ADD_CARDS\":\r\n            return {\r\n                ...state,\r\n                cards: [{...action.newCard}, ...state.cards]\r\n            }\r\n        case \"cardsReducer/DELETE_CARD\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card._id !== action.idPack),\r\n                token: action.token\r\n            }\r\n        case \"cardsReducer/UPDATE_CARD\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.idCard ? {...card, ...action.newCard}: card),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype CardsActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nconst actions = {\r\n    loadCards: (cards: Array<CardType>, token: string | null) => ({\r\n        type: 'cardsReducer/LOAD_DATA',\r\n        cards,\r\n        token\r\n    } as const),\r\n    isLoading: (value: boolean) => ({type: 'cardsReducer/IS_LOADING', value} as const),\r\n    addCardsSuccess: (newCard: CardType, token: string | null) => ({\r\n        type: 'cardsReducer/ADD_CARDS',\r\n        newCard,\r\n        token\r\n    } as const),\r\n    deleteCardSuccess: (idPack: string, token: string | null) => ({\r\n        type: 'cardsReducer/DELETE_CARD',\r\n        idPack,\r\n        token\r\n    } as const),\r\n    updateCardSuccess: (newCard: UpdatedCardType, idCard: string, token: string | null) => ({\r\n        type: 'cardsReducer/UPDATE_CARD',\r\n        newCard,\r\n        idCard,\r\n        token\r\n    } as const),\r\n\r\n}\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<CardsActionsTypes>\r\n\r\nexport const loadCardsData = (packId: string): thunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(actions.isLoading(true))\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsAPI.getCards(token, packId)\r\n        setCookie('token', res.token, Math.floor(res.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.loadCards(res.cards, res.token))\r\n    } catch\r\n        (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const addCards = (packId: string, question: string | number, answer: string | number): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.addCard(token, packId, question, answer);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        await dispatch(actions.addCardsSuccess(data.newCard, data.token));\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const deleteCard = (cardId: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.deleteCard(cardId, token);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        await dispatch(actions.deleteCardSuccess(data.deletedCard._id, data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n};\r\n\r\nexport const updateCard = (cardId: string, question: string, answer: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.updateCard(cardId, token, question, answer);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.updateCardSuccess(data.updatedCard, data.updatedCard._id, data.token));\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n};\r\nexport const searchCardByQuestion = (inputValue: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.searchCard(token, inputValue).then(res => res.data);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.loadCards(data.cards, data.token));\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n};\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {Module} from \"../UniversalModule\";\r\nimport CustomInput from \"../../../input/Input\";\r\nimport Button from \"../../../button/Button\";\r\nimport styles from '../updatePackModule/updatePack.module.css'\r\n\r\ntype PropsType = {\r\n    showModule: boolean,\r\n    cardQuestion: string,\r\n    cardAnswer: string,\r\n    ChangeCard: (question: string, answer: string) => void\r\n    backgroundOnClick: () => void\r\n}\r\n\r\nexport const UpdateCardModule = (props: PropsType) => {\r\n\r\n    const [question, setQuestion] = useState(props.cardQuestion);\r\n    const [answer, setAnswer] = useState(props.cardAnswer);\r\n\r\n    const onchangeQuestionInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n    const onchangeAnswerInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n\r\n    const changeCard = () => {\r\n        props.ChangeCard(question, answer)\r\n    }\r\n\r\n    return <Module height={300}\r\n                   width={400}\r\n                   show={props.showModule}\r\n                   backgroundOnClick={props.backgroundOnClick}\r\n                   enableBackground={true}>\r\n        <div className={styles.window}>\r\n            <div style={{color: 'black'}}>Change card question</div>\r\n            <CustomInput\r\n                value={question}\r\n                onChange={onchangeQuestionInput}\r\n            />\r\n            <div style={{color: 'black'}}>Change card answer</div>\r\n            <CustomInput\r\n                value={answer}\r\n                onChange={onchangeAnswerInput}\r\n            />\r\n            <div className={styles.buttons}>\r\n                <Button buttonClass={'regularButton'}\r\n                        onClick={changeCard}>\r\n                    Add\r\n                </Button>\r\n                <Button\r\n                    buttonClass={'deleteButton'}\r\n                    onClick={props.backgroundOnClick}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    </Module>\r\n\r\n}\r\n","import {CardType, deleteCard, updateCard} from \"../../../../../BLL/cardsRedusers/cards-reduser\";\r\nimport styles from \"../../CardsPack/CardsPack.module.css\";\r\nimport Button from \"../../../../common/button/Button\";\r\nimport {DeleteModule} from \"../../../../common/moduls/windowModules/deleteModule/deleteModule\";\r\nimport {UpdateCardModule} from \"../../../../common/moduls/windowModules/updateCardModule/updateCardModule\";\r\nimport React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n    dataItem: CardType\r\n    dataIndex: number\r\n}\r\n\r\nexport const ContainerModuleCards:React.FC<PropsType> = ({dataItem, dataIndex}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [showUpdateModule, setShowUpdateModule] = useState(false)\r\n    const [showDeleteModule, setShowDeleteModule] = useState(false)\r\n\r\n    const onDeletePack = () => {\r\n        dispatch(deleteCard(dataItem._id))\r\n        setShowDeleteModule(false)\r\n    }\r\n    const onChangeCard = (question: string, answer: string) => {\r\n        dispatch(updateCard(dataItem._id, question, answer))\r\n        setShowUpdateModule(false)\r\n    }\r\n    return <div key={dataIndex + dataItem._id} className={styles.buttons}>\r\n        <Button\r\n            onClick={() => setShowDeleteModule(true)}\r\n            buttonClass={'deleteButton'}\r\n        >\r\n            Delete\r\n        </Button>\r\n        <Button\r\n            onClick={() => setShowUpdateModule(true)}\r\n            buttonClass={'regularButton'}\r\n        >\r\n            Update\r\n        </Button>\r\n        <DeleteModule\r\n            showModule={showDeleteModule}\r\n            moduleName={'card'}\r\n            onDeletePack={onDeletePack}\r\n            backgroundOnClick={() => {\r\n                setShowDeleteModule(false)\r\n            }}\r\n        />\r\n        <UpdateCardModule\r\n            showModule={showUpdateModule}\r\n            cardQuestion={dataItem.question}\r\n            cardAnswer={dataItem.answer}\r\n            ChangeCard={onChangeCard}\r\n            backgroundOnClick={() => setShowUpdateModule(false)}\r\n        />\r\n\r\n    </div>\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport styles from \"../CardsPack/CardsPack.module.css\";\r\nimport Button from \"../../../common/button/Button\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../BLL/redux-store';\r\nimport {addCards, CardType, loadCardsData, searchCardByQuestion} from \"../../../../BLL/cardsRedusers/cards-reduser\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Table, {ITableModel} from \"../../../common/Table/Table\";\r\nimport CustomInput from \"../../../common/input/Input\";\r\nimport {ContainerModuleCards} from \"./ContainerModuleCards/ContainerModuleCards\";\r\nimport Loader from \"../../../common/loader/LoaderComponent\";\r\n\r\nexport const Cards = () => {\r\n    const {id} = useParams()\r\n    const [valueAnswerSearch, setAnswerValueSearch] = useState('');\r\n    const [valueQuestionSearch, setQuestionValueSearch] = useState('');\r\n\r\n    const [valueSearch, setValueSearch] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(loadCardsData(id))\r\n    }, [dispatch, id])\r\n\r\n    const cards = useSelector<AppStateType, Array<CardType>>(state => state.cards.cards)\r\n    const isLoading = useSelector<AppStateType, boolean>(state => state.cards.isLoading)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValueSearch(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestionValueSearch(e.currentTarget.value)\r\n    }\r\n    const onChangeAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswerValueSearch(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const searchByQuestion = () => {\r\n        dispatch(searchCardByQuestion(valueAnswerSearch))\r\n    }\r\n\r\n\r\n    const model: Array<ITableModel> = [\r\n        {\r\n            title: (index: number) => <div key={\"question\" + index}>Question</div>,\r\n            render(dataItem: CardType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.question}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"answer\" + index}>Answer</div>,\r\n            render(dataItem: CardType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.answer}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"grade\" + index}>Grade</div>,\r\n            render(dataItem: CardType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.grade}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"buttons\" + index}>Buttons</div>,\r\n            render: (dataItem: CardType, dataIndex: number) => {\r\n                return <ContainerModuleCards key={dataIndex + dataItem._id} dataItem={dataItem} dataIndex={dataIndex}/>\r\n            }\r\n        },\r\n    ]\r\n\r\n    const addCardsButtonClick = () => {\r\n        dispatch(addCards(id, valueQuestionSearch, valueAnswerSearch))\r\n        setAnswerValueSearch(\"\")\r\n        setQuestionValueSearch(\"\")\r\n    }\r\n    return <div>\r\n        {isLoading ? <Loader/> :\r\n            <div>\r\n                <div className={styles.searchTyping}>\r\n                    <CustomInput onChange={onChangeHandler} value={valueSearch}/>\r\n                    <Button buttonClass={'regularButton'} onClick={searchByQuestion}>Search</Button>\r\n                </div>\r\n                <div className={styles.container}>\r\n                    <div className={styles.head}>\r\n                        <div className={styles.card}>\r\n                            Question\r\n                            <CustomInput onChange={onChangeQuestion} value={valueQuestionSearch}\r\n                                         placeholder={\"Put card question\"}/>\r\n                        </div>\r\n                        <div className={styles.card}>\r\n                            Answer\r\n                            <CustomInput onChange={onChangeAnswer} value={valueAnswerSearch}\r\n                                         placeholder={'Put card answer'}/>\r\n                        </div>\r\n                        <Button buttonClass={'regularButton'} onClick={addCardsButtonClick}>Add</Button>\r\n                    </div>\r\n                    <Table model={model} data={cards}/>\r\n                </div>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n","import React, {useState} from 'react';\r\nimport styles from './LearnCards.module.css';\r\nimport Button from \"../../common/button/Button\";\r\nimport {v1} from 'uuid'\r\nimport {CardType} from \"../../../BLL/cardsRedusers/cards-reduser\";\r\n\r\n\r\ntype PropsType = {\r\n  card: CardType\r\n\r\n}\r\n\r\nexport const LearnCards: React.FC<PropsType> = ({card}) => {\r\n\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const grades = ['don`t know', 'forgot', 'hard to remember', 'know', 'know well']\r\n\r\n    const onSelectedGrade = () => {\r\n        setIsChecked(false)\r\n    }\r\n\r\n    return <div className={styles.container}>\r\n        <div className={styles.module}>\r\n            <div>Question\r\n                <div>{card.question}</div>\r\n            </div>\r\n            {\r\n                isChecked ?\r\n                    <div className={styles.answer}>\r\n                        Answer\r\n                        <div>\r\n                            {card.answer}\r\n                        </div>\r\n                        <div className={styles.buttons}>\r\n                            {grades.map(g => {\r\n                                return <Button buttonClass={'smallButton'}\r\n                                               style={{boxShadow: \"3px 5px 5px rgba(0,0,0,0.4)\"}}\r\n                                               key={v1()}\r\n                                               onClick={() => {\r\n                                               }}\r\n                                >\r\n                                    {g}\r\n                                </Button>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <Button\r\n                        buttonClass={'regularButton'}\r\n                        style={{width: '150px'}}\r\n                        onClick={() => setIsChecked(true)}\r\n                    >\r\n                        Check answer\r\n                    </Button>}\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {LearnCards} from \"./LearnCards\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {NavLink, useParams} from \"react-router-dom\";\r\nimport {CardType, loadCardsData} from \"../../../BLL/cardsRedusers/cards-reduser\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\nimport Button from \"../../common/button/Button\";\r\n\r\n\r\nconst getCard = (cards: Array<CardType>) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    return cards[res.id + 1];\r\n};\r\n\r\nexport const LearnCardsContainer = () => {\r\n    debugger\r\n    const {id} = useParams()\r\n\r\n    const [first, setFirst] = useState<boolean>(false)\r\n    const [card, setCard] = useState<CardType>(\r\n        {\r\n            answer: \"answer\",\r\n            question: \"question\",\r\n            cardsPack_id: \"cardsPack_id\",\r\n            grade: 0,\r\n            rating: 0,\r\n            shots: 0,\r\n            type: 'type',\r\n            created: \"created\",\r\n            updated: \"updated\",\r\n            __v: 0,\r\n            _id: \"_id\"\r\n        })\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(loadCardsData(id))\r\n            setFirst(false)\r\n        }\r\n        if (cards.length > 0) getCard(cards)\r\n    }, [dispatch, id])\r\n\r\n    const cards = useSelector<AppStateType, Array<CardType>>(state => state.cards.cards)\r\n\r\n\r\n    return <>\r\n        {card.answer === \"answer\" ?\r\n            <div>There is no any cards. Please add\r\n                <NavLink to={`/cards/cards/${id}`}> <Button buttonClass={'regularButton'}>Add cards</Button></NavLink>\r\n            </div>\r\n            :\r\n            <LearnCards card={card}/>\r\n        }</>\r\n}\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/main/UI/header/Header';\r\nimport Profile from './components/main/UI/pages/Profile/Profile';\r\nimport ForgotPasswordContainer from \"./components/main/UI/pages/RefreshPassword/RefreshPasswordContainer\";\r\nimport NewPasswordContainer from \"./components/main/UI/pages/newPassword/NewPasswordContainer\";\r\nimport LoginPageContainer from \"./components/main/UI/pages/Login/LogInPageContainer\";\r\nimport RegistrationContainer from './components/main/UI/pages/Registration/RegistrationContainer';\r\nimport CardsPack from \"./components/main/UI/pages/Cards/CardsPack/CardsPack\";\r\nimport {Cards} from \"./components/main/UI/pages/Cards/Cards/Cards\";\r\nimport {LearnCardsContainer} from './components/main/UI/pages/LearnCards/LearnCardsContainer';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Route exact path=\"/login\" component={LoginPageContainer}/>\r\n            <Route exact path=\"/cards/pack\" component={CardsPack}/>\r\n            <Route path=\"/cards/cards/:id\" component={Cards}/>\r\n            <Route exact path=\"/registration\" component={RegistrationContainer}/>\r\n            <Route exact path=\"/refreshPassword\" component={ForgotPasswordContainer}/>\r\n            <Route path=\"/set-new-password/:id\" component={NewPasswordContainer}/>\r\n            <Route path=\"/learn-cards\" component={LearnCardsContainer}/>\r\n            <Route exact path=\"/\" component={Profile}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, Action, combineReducers, applyMiddleware} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {loginReducer} from \"./login-reduser\";\r\nimport {registerReducer} from \"./register-reduser\";\r\nimport {forgotReducer} from \"./forgot-reduser\";\r\nimport {newPasswordReducer} from \"./newPassword-reduser\";\r\nimport {cardsPackReducer } from \"./cardsRedusers/cardsPack-reduser\";\r\nimport { cardsReducer } from \"./cardsRedusers/cards-reduser\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    newPass: newPasswordReducer,\r\n    cardsPack: cardsPackReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport default store;\r\n\r\n\r\n// ______type of state___________\r\n\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// ______type of actions___________\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>\r\n\r\n\r\n// ______type of thunk-creator___________\r\n\r\nexport type baseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./components/main/BLL/redux-store\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
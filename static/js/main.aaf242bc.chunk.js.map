{"version":3,"sources":["components/main/UI/pages/Cards/CardsPack/CardsPack.module.css","components/main/UI/common/moduls/windowModules/updatePackModule/updatePack.module.css","components/main/UI/header/Header.module.css","components/main/UI/common/Paginator/Paginator.module.css","components/main/UI/pages/Login/LogInPage.module.css","components/main/UI/common/SearchPack/SearchPack.module.css","components/main/UI/pages/RefreshPassword/RefreshPassword.module.css","components/main/UI/pages/newPassword/NewPassword.module.css","components/main/UI/pages/Registration/Registration.module.css","components/main/UI/pages/Profile/Profile.module.css","components/main/UI/common/input/Input.module.css","components/main/UI/common/button/Button.module.css","components/main/UI/header/Header.tsx","components/main/UI/common/input/Input.tsx","components/main/UI/common/button/Button.tsx","components/main/UI/pages/Profile/Profile.tsx","components/main/UI/common/Preloader/Preloder.tsx","components/main/UI/pages/RefreshPassword/RefreshPassword.tsx","components/main/DAL/authAPI.ts","components/main/BLL/forgot-reduser.ts","components/main/UI/pages/RefreshPassword/RefreshPasswordContainer.tsx","components/main/UI/pages/newPassword/NewPassword.tsx","components/main/BLL/newPassword-reduser.ts","components/main/UI/pages/newPassword/NewPasswordContainer.tsx","components/main/UI/pages/Login/LogInPage.tsx","components/main/BLL/common/cookies.ts","components/main/BLL/login-reduser.ts","components/main/UI/pages/Login/LogInPageContainer.tsx","components/main/UI/pages/Registration/Registration.tsx","components/main/BLL/register-reduser.ts","components/main/UI/pages/Registration/RegistrationContainer.tsx","components/main/DAL/cards/cardsPackAPI.ts","components/main/BLL/cardsRedusers/cardsPack-reduser.ts","components/main/UI/common/Table/Table.tsx","components/main/UI/common/Paginator/Paginator.tsx","components/main/UI/common/moduls/windowModules/UniversalModule.tsx","components/main/UI/common/moduls/buttonUp/buttonUp.tsx","components/main/UI/common/SearchPack/SearchPack.tsx","components/main/UI/common/moduls/windowModules/updatePackModule/updatePackModule.tsx","components/main/UI/common/moduls/windowModules/deleteModule/deleteModule.tsx","components/main/UI/pages/Cards/CardsPack/ContainerModulePack/ContainerModulePack.tsx","components/main/UI/pages/Cards/CardsPack/CardsPack.tsx","components/main/DAL/cards/cardsAPI.ts","components/main/BLL/cardsRedusers/cards-reduser.ts","components/main/UI/common/moduls/windowModules/updateCardModule/updateCardModule.tsx","components/main/UI/pages/Cards/Cards/ContainerModuleCards/ContainerModuleCards.tsx","components/main/UI/pages/Cards/Cards/Cards.tsx","App.tsx","serviceWorker.ts","components/main/BLL/redux-store.ts","index.tsx"],"names":["module","exports","Header","props","className","styles","header","to","rout","CustomInput","onEnter","error","restProps","inputClass","type","onKeyPress","event","key","Button","buttonClass","Profile","baseSettings","container","Preloader","ForgotPassword","isFetching","unError","messageError","onClickForgotPassword","useState","email","setEmail","forgot","fagotForm","onSubmit","action","placeholder","onChange","e","target","value","disabled","instance","axios","create","baseURL","authAPI","password","rememberMe","post","html","html2","newPass","id","resetPasswordToken","initialState","actions","ForgotPasswordContainer","dispatch","useDispatch","useSelector","store","a","res","data","success","info","accepted","response","forgotPasswordSuccess","NewPassword","onClickNewPassword","newPassForm","NewPasswordContainer","useParams","pass","newPasswordSuccess","LoginPage","setUser","logIn","currentTarget","setPassword","checkbox","checked","setRememberMe","forgotPass","setCookie","name","token","tokenDeathTime","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","isSuccess","isError","isLoading","LoginPageContainer","login","getState","then","Math","floor","console","Registration","onInputPasswordChange","registration","inputArea","addUser","map","buttons","RegistrationContainer","passwordRepeat","setPasswordRepeat","isPasswordSame","setSamePassword","useEffect","register","cardsPackAPI","pageCount","page","get","cardsPack","newPackName","idPack","put","_id","delete","inputValue","number","filter","cards","cardsTotalCount","maxGrade","minGrade","newCardsPack","newPack","cardPacksTotalCount","setNewPage","cardPacks","searchPackByFilter","d","Table","model","headerStyle","tableStyle","rowsStyle","rowStyle","style","margin","display","flexFlow","alignItems","justifyContent","width","padding","border","borderRadius","m","index","title","dataItem","dataIndex","borderBottom","modelIndex","render","Paginator","setValue","ceil","pages","i","push","showArrowRight","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","select","Number","paginatorArrow","onClick","p","selectedPage","onPageChange","Module","top","height","left","show","enableBackground","position","background","opacity","zIndex","backgroundStyle","backgroundOnClick","color","modalStyle","modalOnClick","children","ModuleUp","speed","setShow","handleScroll","window","pageYOffset","addEventListener","step","lastState","innerTimer","setInterval","clearInterval","scroll","SearchPack","search","setSearch","head","searchTyping","addCardPack","alert","UpdatePackModule","packName","setPackName","showModule","ChangePack","DeleteModule","moduleName","onDeletePack","ContainerModulePack","showUpdateModule","setShowUpdateModule","showDeleteModule","setShowDeleteModule","updatedCardsPack","changeCardPack","CardsPack","rating","grade","cardsAPI","packId","question","answer","card","cardsPack_id","cardId","newCard","idCard","UpdateCardModule","cardQuestion","setQuestion","cardAnswer","setAnswer","ChangeCard","ContainerModuleCards","deletedCard","updatedCard","updateCard","Cards","valueAnswerSearch","setAnswerValueSearch","valueQuestionSearch","setQuestionValueSearch","valueSearch","setValueSearch","state","App","exact","path","component","Boolean","location","hostname","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","unregister","catch","message"],"mappings":"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","file":"static/js/main.aaf242bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsPack_container__uJx7h\",\"searchTyping\":\"CardsPack_searchTyping__1oawE\",\"head\":\"CardsPack_head__16Z14\",\"cards\":\"CardsPack_cards__31Zl2\",\"buttons\":\"CardsPack_buttons__JlVHB\",\"regularButton\":\"CardsPack_regularButton__2fi38\",\"add\":\"CardsPack_add__1PCqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"updatePack_window__23Ayh\",\"buttons\":\"updatePack_buttons__18h0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__O_PC8\",\"rout\":\"Header_rout__17_vR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__ofKqa\",\"select\":\"Paginator_select__TXZcR\",\"pages\":\"Paginator_pages__3sYDn\",\"selectedPage\":\"Paginator_selectedPage__1XNZk\",\"paginatorArrow\":\"Paginator_paginatorArrow__1C_g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LogInPage_container__1qDBs\",\"logIn\":\"LogInPage_logIn__2Zlu_\",\"checkbox\":\"LogInPage_checkbox__2tGba\",\"forgotPass\":\"LogInPage_forgotPass__2eiLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTyping\":\"SearchPack_searchTyping__teGvi\",\"head\":\"SearchPack_head__3VfG-\",\"buttons\":\"SearchPack_buttons__ElNQT\",\"regularButton\":\"SearchPack_regularButton__pdXvU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot\":\"RefreshPassword_forgot__2Udrk\",\"fagotForm\":\"RefreshPassword_fagotForm__3ARDu\",\"error\":\"RefreshPassword_error__8cZD5\",\"unError\":\"RefreshPassword_unError__3Ulfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPass\":\"NewPassword_newPass__2J3cK\",\"newPassForm\":\"NewPassword_newPassForm__nNccJ\",\"error\":\"NewPassword_error__CSJfB\",\"unError\":\"NewPassword_unError__3Vvab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registration_container__3D76H\",\"inputArea\":\"Registration_inputArea__3LrSc\",\"buttons\":\"Registration_buttons__3aqbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"baseSettings\":\"Profile_baseSettings__1X-89\",\"container\":\"Profile_container__reze-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputClass\":\"Input_inputClass__39JiE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"regularButton\":\"Button_regularButton__Dewfh\",\"deleteButton\":\"Button_deleteButton__1ZXBy\",\"smallButton\":\"Button_smallButton__3Gc4V\",\"bigButton\":\"Button_bigButton__3UWRs\"};","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PropsType = {}\r\n\r\n\r\nconst Header = (props: PropsType) => {\r\n    return <div className={styles.header}>\r\n        <NavLink to=\"/\" className={styles.rout}> Profile </NavLink>\r\n        <NavLink to=\"/cards/pack\" className={styles.rout}> Cards </NavLink>\r\n        <NavLink to=\"/login\" className={styles.rout}> Login </NavLink>\r\n        <NavLink to=\"/registration\" className={styles.rout}> Registration </NavLink>\r\n        <NavLink to=\"/refreshPassword\" className={styles.rout}> Remind password </NavLink>\r\n        <NavLink to=\"/set-new-password/:id\" className={styles.rout}> New password </NavLink>\r\n    </div>\r\n}\r\n\r\nexport default Header\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nexport type InputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { onEnter?: () => void, error?: string };\r\n\r\nconst CustomInput = (props: InputPropsType) => {\r\n    const {onEnter, error, ...restProps} = props;\r\n\r\n    const onClickEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (onEnter && event.key === \"Enter\") {\r\n            onEnter()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <input className={styles.inputClass} {...restProps} type=\"text\" onKeyPress={onClickEnter}/>\r\n            {error ? <span>{error}</span> : ''}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CustomInput;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport styles from './Button.module.css';\r\n\r\ntype   ButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    &\r\n    { buttonClass: \"regularButton\" | 'deleteButton' | \"smallButton\" | 'bigButton'}\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n    const {...restProps} = props;\r\n    return (\r\n        <button className={styles[props.buttonClass]} {...restProps}/>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from './Profile.module.css';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\n\r\ntype PropsType = {}\r\n\r\n\r\nconst Profile = (props: PropsType) => {\r\n    return <div className={styles.baseSettings}>\r\n        <div>Basic style for button and input</div>\r\n        <div className={styles.container}>\r\n            <CustomInput/>\r\n            <Button buttonClass={'regularButton'}>Submit</Button>\r\n            <Button buttonClass={'deleteButton'}>Delete</Button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Profile\r\n","import React from \"react\";\r\n\r\nconst Preloader = () => {\r\n\r\n  return <span>Loading....</span>\r\n\r\n}\r\n\r\nexport default Preloader;","import React, {ChangeEvent, useState} from 'react';\r\nimport styles from './RefreshPassword.module.css';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport Preloader from \"../../common/Preloader/Preloder\";\r\n\r\ntype PropsType = {\r\n    onClickForgotPassword: (email: string) => void\r\n    isFetching: boolean\r\n    error: boolean\r\n    unError: boolean\r\n    messageError: string\r\n}\r\n\r\n\r\nconst ForgotPassword: React.FC<PropsType> = ({isFetching, error, unError, messageError, onClickForgotPassword}) => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const handleSubmit = () => {\r\n        onClickForgotPassword(email)\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    return <div className={styles.forgot}>\r\n        <h3>Refresh Password</h3>\r\n        {isFetching ? <Preloader/> : null}\r\n        {error\r\n            ? <span className={styles.error}>{messageError}</span>\r\n            : null\r\n        }\r\n        {unError\r\n            ? <span className={styles.unError}>Success</span>\r\n            : null\r\n        }\r\n        <form className={styles.fagotForm} onSubmit={handleSubmit} action=\"\">\r\n            <CustomInput placeholder=\"Email\" onChange={handleChange} value={email}/>\r\n            <Button disabled={isFetching} buttonClass={\"regularButton\"}>Submit</Button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default ForgotPassword\r\n","import axios from 'axios'\r\n\r\n export const instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n})\r\n\r\nexport const authAPI = {\r\n    logIn(email: string, password: string, rememberMe: boolean) {\r\n        return (\r\n            instance.post<LoginResponseType>(`/auth/login`,\r\n                {\r\n                    email: email,\r\n                    password: password,\r\n                    rememberMe: rememberMe\r\n                }\r\n            )\r\n        )\r\n    },\r\n    registration(email: string, password: string) {\r\n        return instance.post<RegisterResponseType>(\"/auth/register\",\r\n            {\r\n                email: email,\r\n                password: password\r\n            }\r\n        )\r\n    },\r\n    forgotPass(email: string) {\r\n        return instance.post<ApiType>(\"auth/forgot\", {\r\n            email: email,\r\n            html: \"<a href='http://localhost:3000/#/newPassword'\",\r\n            html2: \"http://localhost:3000/?#/newPassword</a>\"\r\n        })\r\n\r\n    },\r\n    newPass(newPass: string, id: string) {\r\n        return instance.post<ApiType>(\"auth/set-new-password\", {\r\n            resetPasswordToken: id,\r\n            password: newPass\r\n        })\r\n    }\r\n\r\n}\r\n\r\n//__________ Types ______________\r\n\r\ntype LoginResponseType = {\r\n    email: string\r\n    name: string\r\n    isAdmin: boolean\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    __v: number\r\n    _id: string\r\n    success: boolean\r\n    error: string\r\n    in: string\r\n}\r\n\r\n\r\ntype RegisterResponseType = {\r\n    addedUser: {\r\n        email: string,\r\n        isAdmin: boolean,\r\n        __v: number,\r\n        _id: string\r\n    },\r\n    success: boolean,\r\n    error: string\r\n}\r\n\r\n\r\ntype ApiType = {\r\n    info: { accepted: string }\r\n    password: string\r\n    success: boolean\r\n    config: {\r\n        data: string\r\n    }\r\n}\r\n","\r\nimport {baseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport { authAPI } from \"../DAL/authAPI\";\r\n\r\nconst initialState = {\r\n    email: \" \",\r\n    isFetching: false,\r\n    error: false,\r\n    unError: false,\r\n    messageError: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const forgotReducer = (state: InitialStateType = initialState, action: ForgotActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/forgot/SET_EMAIL\":\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                unError: true,\r\n            }\r\n        case \"cards/forgot/TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case \"cards/forgot/ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                messageError: action.messageError\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype ForgotActionType = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    forgotPassword: (email: string) => ({type: \"cards/forgot/SET_EMAIL\", email} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: \"cards/forgot/TOGGLE_IS_FETCHING\", isFetching} as const),\r\n    changeError: (error: boolean, messageError: string) => ({type: \"cards/forgot/ERROR\", error, messageError} as const)\r\n}\r\n\r\ntype thunkType = baseThunkType<ForgotActionType>\r\n\r\nexport const forgotPasswordSuccess = (email: string): thunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    try {\r\n        const res = await authAPI.forgotPass(email)\r\n        if (res.data.success) dispatch(actions.forgotPassword(res.data.info.accepted[0]))\r\n    } catch (e) {\r\n        dispatch(actions.changeError(true, e.response.data.error))\r\n    }\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ForgotPassword from \"./RefreshPassword\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {forgotPasswordSuccess} from \"../../../BLL/forgot-reduser\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\n\r\nconst ForgotPasswordContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isFetching, error, unError, messageError} = useSelector((store: AppStateType) => store.forgot)\r\n\r\n    const onClickForgotPassword = (email: string) => {\r\n        dispatch(forgotPasswordSuccess(email))\r\n    }\r\n\r\n    return <ForgotPassword error={error}\r\n                           unError={unError}\r\n                           isFetching={isFetching}\r\n                           messageError={messageError}\r\n                           onClickForgotPassword={onClickForgotPassword}/>\r\n\r\n}\r\n\r\nexport default ForgotPasswordContainer\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport Preloader from \"../../common/Preloader/Preloder\";\r\nimport styles from \"./NewPassword.module.css\";\r\n\r\ntype PropsType = {\r\n    onClickNewPassword: (newPass: string) => void\r\n    isFetching: boolean\r\n    error: boolean\r\n    unError: boolean\r\n    messageError: string\r\n}\r\n\r\n\r\nconst NewPassword: React.FC<PropsType> = ({onClickNewPassword, isFetching, error, unError, messageError}) => {\r\n\r\n    const [newPass, setEmail] = useState(\"\")\r\n\r\n    const handleSubmit = () => {\r\n        onClickNewPassword(newPass)\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    return <div className={styles.newPass}>\r\n        <h3>New Password</h3>\r\n        {isFetching ? <Preloader/> : null}\r\n        {error\r\n            ? <span className={styles.error}>{messageError}</span>\r\n            : null\r\n        }\r\n        {unError\r\n            ? <span className={styles.unError}>Success</span>\r\n            : null\r\n        }\r\n        <form className={styles.newPassForm} onSubmit={handleSubmit} action=\"\">\r\n            <CustomInput placeholder=\"Password\" onChange={handleChange} value={newPass}/>\r\n            <Button disabled={isFetching} buttonClass={\"regularButton\"}>Submit</Button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default NewPassword\r\n","import {authAPI} from \"../DAL/authAPI\";\r\nimport {baseThunkType, InferActionsTypes} from \"./redux-store\";\r\n\r\nconst initialState = {\r\n    password: \" \",\r\n    isFetching: false,\r\n    error: false,\r\n    unError: false,\r\n    messageError: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: NewPassActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cards/newPassword/UPDATE_PASSWORD\":\r\n            return {\r\n                ...state,\r\n                password: action.password,\r\n                unError: true\r\n            }\r\n        case \"cards/newPassword/TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case \"cards/newPassword/ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                messageError: action.messageError\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\ntype NewPassActionType = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    newPassword: (password: string) => ({type: \"cards/newPassword/UPDATE_PASSWORD\", password} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: \"cards/newPassword/TOGGLE_IS_FETCHING\", isFetching} as const),\r\n    changeError: (error: boolean, messageError: string) => ({\r\n        type: \"cards/newPassword/ERROR\",\r\n        error,\r\n        messageError\r\n    } as const)\r\n}\r\n\r\ntype thunkType = baseThunkType<NewPassActionType>\r\n\r\nexport const newPasswordSuccess = (pass: string, id: string): thunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n\r\n    try {\r\n        const res = await authAPI.newPass(pass, id)\r\n        if (res.data.success) dispatch(actions.newPassword(pass))\r\n    } catch (e) {\r\n        dispatch(actions.changeError(true, e.response.data.error))\r\n    }\r\n\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport NewPassword from \"./NewPassword\";\r\nimport {newPasswordSuccess} from \"../../../BLL/newPassword-reduser\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\n\r\nconst NewPasswordContainer = () => {\r\n\r\n    let {id} = useParams()\r\n    const dispatch = useDispatch()\r\n    const {isFetching, error, unError, messageError} = useSelector((store: AppStateType) => store.newPass)\r\n\r\n    const onClickNewPassword = (newPass: string) => {\r\n        dispatch(newPasswordSuccess(newPass, id))\r\n    }\r\n\r\n    return <NewPassword error={error}\r\n                        unError={unError}\r\n                        messageError={messageError}\r\n                        isFetching={isFetching}\r\n                        onClickNewPassword={onClickNewPassword}/>\r\n}\r\n\r\nexport default NewPasswordContainer\r\n","import React, {ChangeEvent} from 'react';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport styles from './LogInPage.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (value: string) => void\r\n    password: string\r\n    setPassword: (value: string) => void\r\n    rememberMe: boolean\r\n    setRememberMe: (value: boolean) => void\r\n    setUser: () => void\r\n    isLoading: boolean\r\n    isError: boolean\r\n}\r\n\r\n\r\nconst LoginPage = (props: PropsType) => {\r\n    const onSubmit = () => {\r\n        props.setUser()\r\n    }\r\n\r\n    const onInputMailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onInputPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setRememberMe(e.currentTarget.checked)\r\n    }\r\n    return (\r\n        <form className={styles.container} onSubmit={onSubmit}>\r\n            <h3>Log in</h3>\r\n            <div className={styles.logIn}>\r\n                <CustomInput type=\"email\" placeholder='Email' value={props.email} onChange={onInputMailChange}/>\r\n                <CustomInput type='password' placeholder='Password' value={props.password}\r\n                             onChange={onInputPasswordChange}/>\r\n            </div>\r\n            <div className={styles.checkbox}>\r\n                <input type='checkbox' checked={props.rememberMe as boolean} onChange={onCheckboxChange}/>\r\n                <div>Remember me</div>\r\n            </div>\r\n            <Button buttonClass=\"regularButton\">Log in</Button>\r\n            <NavLink to={'/refreshPassword'} className={styles.forgotPass}>Forgot password?</NavLink>\r\n            <NavLink to={'/registration'} className={styles.forgotPass}>I don`t have an account</NavLink>\r\n        </form>)\r\n\r\n}\r\nexport default LoginPage\r\n","export const setCookie = (name: string, token: string| null, tokenDeathTime: number) => {\r\n    document.cookie = `${name}=${token};max-age=${tokenDeathTime};path=/`;\r\n};\r\n\r\nexport const setTokenInCookie = (token: string | null, tokenDeathTime: number) => {\r\n    setCookie('token', token, Math.floor(tokenDeathTime / 1000) - 180);\r\n}\r\n\r\nexport const getCookie = (name: string): string | null => {\r\n    const matches = document.cookie.match(new RegExp(\r\n        '(?:^|; )' + name.replace(/([.$?*|{}()\\]\\\\^])/g, '\\\\$1') + '=([^;]*)'\r\n    ));\r\n    return matches ? decodeURIComponent(matches[1]) : null;\r\n};\r\n","import {AppStateType, baseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {authAPI} from \"../DAL/authAPI\";\r\nimport {setTokenInCookie} from \"./common/cookies\";\r\n\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isSuccess: false,\r\n    isError: false,\r\n    isLoading: false,\r\n    token: '',\r\n    rememberMe: false\r\n}\r\n\r\n\r\nexport const loginReducer = (state = initialState, action: LoginActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'loginReducer/IS_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isSuccess: action.value,\r\n                isError: false,\r\n                isLoading: false,\r\n                token: action.token\r\n            }\r\n        case 'loginReducer/IS_ERROR':\r\n            return {\r\n                ...state,\r\n                isError: action.value,\r\n                isSuccess: false,\r\n                isLoading: false\r\n            }\r\n        case 'loginReducer/IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n//____________ Actions________________\r\n\r\ntype LoginActionType = InferActionsTypes<typeof actions>\r\n\r\n\r\nconst actions = {\r\n    isSuccess: (value: boolean, token: string) => ({\r\n        type: 'loginReducer/IS_SUCCESS',\r\n        value,\r\n        token\r\n    } as const),\r\n    isError: (value: boolean) => ({type: 'loginReducer/IS_ERROR', value} as const),\r\n    isLoading: (value: boolean) => ({type: 'loginReducer/IS_LOADING', value} as const)\r\n}\r\n\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<LoginActionType>\r\n\r\nexport const logIn = (email: string, password: string, rememberMe: boolean): thunkType => async (dispatch, getState: () => AppStateType) => {\r\n    dispatch(actions.isLoading(true))\r\n    try {\r\n        const res = await authAPI.logIn(email, password, rememberMe)\r\n            .then(data => data.data)\r\n        setTokenInCookie(res.token, res.tokenDeathTime)\r\n        dispatch(actions.isSuccess(true, res.token))\r\n    } catch (e) {\r\n        dispatch(actions.isError(true))\r\n        console.error(e)\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport LoginPage from \"./LogInPage\";\r\nimport {logIn} from \"../../../BLL/login-reduser\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\n\r\n\r\nconst LoginPageContainer = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setUser = () => {\r\n        dispatch(logIn(email, password, rememberMe))\r\n        setEmail('')\r\n        setPassword('')\r\n        setRememberMe(false)\r\n    }\r\n    const {isLoading, isSuccess, isError} = useSelector((store: AppStateType) => store.login)\r\n\r\n    if (isSuccess) {\r\n        return <Redirect to={\"/\"}/>\r\n    } else {\r\n        return (<LoginPage email={email}\r\n                           setEmail={setEmail}\r\n                           password={password}\r\n                           setPassword={setPassword}\r\n                           isError={isError}\r\n                           rememberMe={rememberMe}\r\n                           setRememberMe={setRememberMe}\r\n                           setUser={setUser}\r\n                           isLoading={isLoading}/>)\r\n\r\n    }\r\n}\r\n\r\nexport default LoginPageContainer\r\n","import React, {ChangeEvent} from 'react';\r\nimport CustomInput from \"../../common/input/Input\";\r\nimport Button from \"../../common/button/Button\";\r\nimport styles from \"./Registration.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    email: string\r\n    setEmail: (text: string) => void\r\n    password: string\r\n    setPassword: (text: string) => void\r\n    addUser: () => void\r\n    passwordRepeat: string\r\n    setPasswordRepeat: (text: string) => void\r\n    isPasswordSame: boolean\r\n    isLoading: boolean\r\n    isError: boolean\r\n}\r\n\r\n\r\nconst Registration = (props: PropsType) => {\r\n\r\n    const onRegisterClick = () => {\r\n        props.addUser()\r\n    }\r\n\r\n    const onInputMailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onInputPasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const registration = [\r\n        {name: \"Email\", placeholder: 'Enter your Email...', type: 'email', onChange: onInputMailChange},\r\n        {name: \"Password\", placeholder: 'Enter your password...', type: 'password', onChange: onInputPasswordChange},\r\n        {name: \"Confirm Password\", placeholder: 'Enter your password confirmation...', onChange: onInputPasswordChange},\r\n    ]\r\n\r\n    return <div className={styles.container}>\r\n        <h3>Registration</h3>\r\n        <form className={styles.inputArea} onSubmit={onRegisterClick}>\r\n            {\r\n                registration.map(data => <div>\r\n                    <div>{data.name}</div>\r\n                    <CustomInput placeholder={data.placeholder} type={data.type} onChange={data.onChange}/>\r\n                </div>)\r\n            }\r\n            <div className={styles.buttons}>\r\n                <Button buttonClass={'regularButton'}>Sign up</Button>\r\n                <NavLink to={\"/\"}><Button buttonClass={'deleteButton'}>Cancel</Button></NavLink>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default Registration\r\n","import {AppStateType, baseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {authAPI} from \"../DAL/authAPI\";\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isSuccess: false,\r\n    isError: false,\r\n    isLoading: false\r\n\r\n}\r\n\r\n\r\nexport const registerReducer = (state = initialState, action: RegisterActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case \"registerReducer/REGISTER_IS_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isSuccess: action.value\r\n            };\r\n        case \"registerReducer/REGISTER_IS_ERROR\":\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: true\r\n            };\r\n        case \"registerReducer/REGISTER_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n// __________________ Actions __________________\r\n\r\ntype RegisterActionsType = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    registerIsSuccess: (value: boolean) => ({type: \"registerReducer/REGISTER_IS_SUCCESS\", value} as const),\r\n    registerIsError: () => ({type: \"registerReducer/REGISTER_IS_ERROR\"} as const),\r\n    registerIsLoading: () => ({type: \"registerReducer/REGISTER_IS_LOADING\"} as const)\r\n}\r\n\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<RegisterActionsType>\r\n\r\nexport const registration = (email: string, password: string): thunkType => async (dispatch, getState: () => AppStateType) => {\r\n    debugger\r\n    dispatch(actions.registerIsLoading)\r\n    try {\r\n        const res = await authAPI.registration(email, password)\r\n        if (res.data.success) dispatch(actions.registerIsSuccess(true))\r\n    } catch (e) {\r\n        dispatch(actions.registerIsError())\r\n        console.error(e)\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Registration from \"./Registration\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {registration} from \"../../../BLL/register-reduser\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\n\r\n\r\nconst RegistrationContainer = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [passwordRepeat, setPasswordRepeat] = useState<string>('');\r\n    const [isPasswordSame, setSamePassword] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if (passwordRepeat === password) setSamePassword(true)\r\n        else setSamePassword(false)\r\n    }, [passwordRepeat]);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addUser = () => {\r\n        dispatch(registration(email, password));\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n    };\r\n\r\n    const {isLoading, isSuccess, isError} = useSelector((store: AppStateType) => store.register);\r\n\r\n    if (isSuccess) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (<Registration email={email} setEmail={setEmail} password={password} setPassword={setPassword}\r\n                          passwordRepeat={passwordRepeat} setPasswordRepeat={setPasswordRepeat}\r\n                          isPasswordSame={isPasswordSame}\r\n                          addUser={addUser} isLoading={isLoading} isError={isError}/>\r\n    )\r\n}\r\n\r\nexport default RegistrationContainer\r\n","import axios from 'axios'\r\nimport {CardPackType} from \"../../BLL/cardsRedusers/cardsPack-reduser\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n})\r\n\r\ntype GetApiType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype AddApiType = {\r\n    newCardsPack: CardPackType\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype UpdateApiType = {\r\n    updatedCardsPack: CardPackType\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype DeleteApiType = {\r\n    token: string | null\r\n    tokenDeathTime: number\r\n\r\n}\r\n\r\nexport const cardsPackAPI = {\r\n    getPack(token: string | null, pageCount: number = 4, page: number = 1,) {\r\n        return instance.get<GetApiType>(`cards/pack?token=${token}&pageCount=${pageCount}&page=${page}`).then(res => res.data)\r\n    },\r\n    addPack(token: string | null, value?: string) {\r\n        return instance.post<AddApiType>(`cards/pack`, {\r\n            cardsPack: {\r\n                name: value\r\n            },\r\n            token\r\n        })\r\n    },\r\n    updatePack(newPackName: string, idPack: string, token: string | null) {\r\n        return instance.put<UpdateApiType>(`cards/pack`, {\r\n            cardsPack: {\r\n                _id: idPack,\r\n                name: newPackName\r\n            },\r\n            token\r\n        })\r\n    },\r\n    deletePack(idPack: string, token: string | null) {\r\n        return instance.delete<DeleteApiType>(`/cards/pack?token=${token}&id=${idPack}`)\r\n    },\r\n    searchPack(token: string | null, inputValue: string,) {\r\n        return instance.get<GetApiType>(`/cards/pack?token=${token}&packName=${inputValue}`)\r\n    },\r\n    setPage(token: string, currentPage: number) {\r\n        return instance.get<GetApiType>(`cards/pack?&token=${token}&page=${currentPage}`)\r\n    },\r\n    sortPacksByFilter(token: string | null, number?: string, filter?: string) {\r\n        return instance.get<GetApiType>\r\n        (`cards/pack?&token=${token}&sortPacks=${number}${filter}`);\r\n    }\r\n}\r\n\r\n\r\n","import {baseThunkType, InferActionsTypes} from \"../redux-store\";\r\nimport {cardsPackAPI} from \"../../DAL/cards/cardsPackAPI\";\r\nimport {getCookie, setCookie} from \"../common/cookies\";\r\n\r\nexport type CardPackType = {\r\n    _id: string\r\n    user_id: string,\r\n    name: string,\r\n    path: string,\r\n    grade: number,\r\n    shots: number,\r\n    rating: number,\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n}\r\n\r\nexport type CardsPacksType = {\r\n    cards: Array<CardPackType>,\r\n    cardsTotalCount: number,\r\n    maxGrade: string,\r\n    minGrade: number,\r\n    page: number\r\n    pageCount: number,\r\n    token: string | null,\r\n    tokenDeathTime: number,\r\n    isLoading: boolean\r\n}\r\n\r\nlet initialState: CardsPacksType = {\r\n    cards: [],\r\n    cardsTotalCount: 0,\r\n    maxGrade: '',\r\n    minGrade: 0,\r\n    page: 0,\r\n    pageCount: 0,\r\n    token: '',\r\n    tokenDeathTime: 0,\r\n    isLoading: false,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const cardsPackReducer = (state = initialState, action: CardsPackActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'cardsPackReducer/LOAD_DATA':\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                token: action.token,\r\n                isLoading: false\r\n            }\r\n        case \"cardsPackReducer/IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.value,\r\n\r\n            }\r\n        case \"cardsPackReducer/ADD_CARD_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: [action.newCardsPack, ...state.cards],\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/UPDATE_CARD_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.idPack ? {...card, ...action.newPack} : card),\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/DELETE_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card._id !== action.idPack),\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/SEARCH_PACK\":\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                token: action.token\r\n            }\r\n        case \"cardsPackReducer/GET_DATA\":\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                cardsTotalCount: action.cardPacksTotalCount,\r\n                page: action.page,\r\n                pageCount: action.pageCount,\r\n                token: action.token,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype CardsPackActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nconst actions = {\r\n    loadData: (cards: Array<CardPackType>, token: string | null) => ({\r\n        type: 'cardsPackReducer/LOAD_DATA',\r\n        cards,\r\n        token\r\n    } as const),\r\n    isLoading: (value: boolean) => ({type: 'cardsPackReducer/IS_LOADING', value} as const),\r\n    addCardPackSuccess: (newCardsPack: CardPackType, token: string | null) => ({\r\n        type: 'cardsPackReducer/ADD_CARD_PACK',\r\n        newCardsPack,\r\n        token\r\n    } as const),\r\n    changeCardPackSuccess: (idPack: string, newPack: CardPackType, token: string | null) => ({\r\n        type: 'cardsPackReducer/UPDATE_CARD_PACK',\r\n        idPack,\r\n        newPack,\r\n        token\r\n    } as const),\r\n    deleteCardPackSuccess: (idPack: string, token: string | null) => ({\r\n        type: 'cardsPackReducer/DELETE_PACK',\r\n        idPack,\r\n        token\r\n    } as const),\r\n    searchedPack: (cards: Array<CardPackType>, token: string | null) => ({\r\n        type: 'cardsPackReducer/SEARCH_PACK',\r\n        cards,\r\n        token\r\n    } as const),\r\n    getData: (cards: Array<CardPackType>, cardPacksTotalCount: number, page: number, pageCount: number, token: string | null) => ({\r\n        type: 'cardsPackReducer/GET_DATA',\r\n        cards,\r\n        cardPacksTotalCount,\r\n        page,\r\n        pageCount,\r\n        token\r\n    } as const),\r\n}\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<CardsPackActionsTypes>\r\n\r\nexport const loadCardsPackData = (): thunkType => async (dispatch) => {\r\n    dispatch(actions.isLoading(true))\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsPackAPI.getPack(token)\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.getData(data.cardPacks, data.cardPacksTotalCount, data.page, data.pageCount, data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const setNewPage = (pageCount: number, page?: number): thunkType => async (dispatch) => {\r\n\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsPackAPI.getPack(token, pageCount, page)\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.getData(data.cardPacks, data.cardPacksTotalCount, data.page, data.pageCount, data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const addCardPack = (value: string): thunkType => async (dispatch) => {\r\n\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.addPack(token, value)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.addCardPackSuccess(res.data.newCardsPack, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const changeCardPack = (idPack: string, newPackName: string): thunkType => async (dispatch) => {\r\n\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.updatePack(newPackName, idPack, token)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.changeCardPackSuccess(idPack, res.data.updatedCardsPack, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const deleteCardPack = (idPack: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.deletePack(idPack, token)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.deleteCardPackSuccess(idPack, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const showSearchedPack = (inputValue: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.searchPack(token, inputValue)\r\n        setCookie('token', res.data.token, Math.floor(res.data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.loadData(res.data.cardPacks, res.data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n\r\n}\r\nexport const searchPackByFilter = (number?: string, filter?: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsPackAPI.sortPacksByFilter(token, number, filter).then(d => d.data)\r\n        setCookie('token', res.token, Math.floor(res.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.searchedPack(res.cardPacks, token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\n","import React, {CSSProperties, ReactNode} from 'react';\r\n\r\n\r\nexport interface ITableModel {\r\n    title: (index: number) => ReactNode;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number) => ReactNode;\r\n    // render: (dataItem: CardPackType | CardType, modelIndex: number, dataIndex: number) => ReactNode;\r\n}\r\n\r\ninterface ITableProps {\r\n    model: ITableModel[];\r\n    data: any\r\n    // data: Array<CardPackType> | Array<CardType>\r\n\r\n    headerStyle?: CSSProperties,\r\n    tableStyle?: CSSProperties,\r\n    rowsStyle?: CSSProperties,\r\n    rowStyle?: CSSProperties,\r\n}\r\n\r\nconst Table: React.FC<ITableProps> = (\r\n    {\r\n        model,\r\n        data,\r\n\r\n        headerStyle,\r\n        tableStyle,\r\n        rowsStyle,\r\n        rowStyle,\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                margin: '0 10px',\r\n                display: 'flex',\r\n                flexFlow: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                width: '100%',\r\n                ...tableStyle,\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    padding: \"20px 0\",\r\n                    margin: \"20px\",\r\n                    border: '1px solid black',\r\n                    borderRadius: \"5px\",\r\n                    width: '90%',\r\n                    display: 'flex',\r\n                    flexFlow: 'row',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                    ...headerStyle,\r\n                }}\r\n            >\r\n                {model.map((m: ITableModel, index: number) => m.title(index))}\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    borderRadius: \"5px\",\r\n                    border: '1px solid black',\r\n                    width: '90%',\r\n                    ...rowsStyle,\r\n                }}\r\n            >\r\n                {/*CardPackType | CardType*/}\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div\r\n                        key={dataItem._id || dataIndex}\r\n                        style={{\r\n                            borderBottom: '1px solid black',\r\n                            display: 'flex',\r\n                            flexFlow: 'row',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'space-between',\r\n                            padding: '16px',\r\n                            ...rowStyle,\r\n                        }}\r\n                    >\r\n                        {model.map((m, modelIndex) => m.render(dataItem, modelIndex, dataIndex))}\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../BLL/redux-store\";\r\nimport {setNewPage} from \"../../../BLL/cardsRedusers/cardsPack-reduser\";\r\nimport styles from './Paginator.module.css';\r\n\r\nexport const Paginator = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {page, pageCount, cardsTotalCount} = useSelector((store: AppStateType) => store.cardsPack)\r\n    const [value, setValue] = useState(pageCount)\r\n\r\n    const placeholder = Math.ceil(cardsTotalCount / pageCount)\r\n    let pages = []\r\n    for (let i = 1; i <= placeholder; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const numberPages = 5\r\n\r\n    let showArrowRight = Math.ceil(placeholder / numberPages)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * numberPages + 1\r\n    const rightPortionPageNumber = portionNumber * numberPages\r\n\r\n\r\n    const handlerChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        setValue(Number(e.target.value))\r\n        dispatch(setNewPage(Number(e.target.value)))\r\n    }\r\n\r\n    const onPageChange = (p: number) => {\r\n        dispatch(setNewPage(value, p))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            <div>\r\n                <select className={styles.select} value={value} onChange={handlerChange}>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"15\">15</option>\r\n                </select>\r\n\r\n            </div>\r\n            {portionNumber > 1 &&\r\n            <span className={styles.paginatorArrow} onClick={() => setPortionNumber(portionNumber - 1)}> « </span>\r\n            }\r\n            <div>\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map((p, index) => <span\r\n                        key={index}\r\n                        className={`${styles.pages} ${page === p && styles.selectedPage}`}\r\n                        onClick={() => onPageChange(p)}\r\n                    >{p}</span>)}\r\n            </div>\r\n            {showArrowRight > portionNumber &&\r\n\r\n            <span className={styles.paginatorArrow} onClick={()=>  setPortionNumber(portionNumber + 1)}> » </span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {CSSProperties} from 'react';\r\n\r\n\r\ntype PropsType = {\r\n    height: number\r\n    width: number\r\n    show: boolean\r\n    enableBackground?: boolean\r\n    backgroundStyle?: CSSProperties\r\n    modalStyle?: CSSProperties\r\n    backgroundOnClick?: () => void\r\n    modalOnClick?: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nexport const Module = (props: PropsType) => {\r\n    const top = `calc(50vh - ${props.height / 2}px)`;\r\n    const left = `calc(50vw - ${props.width / 2}px)`;\r\n\r\n    if (!props.show) return null;\r\n\r\n    return (\r\n        <>\r\n            {props.enableBackground && <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    left: '0px',\r\n                    width: '100vw',\r\n                    height: '100vh',\r\n\r\n                    background: 'black',\r\n                    opacity: 0.35,\r\n                    zIndex: 0,\r\n\r\n                    ...props.backgroundStyle,\r\n                }}\r\n                onClick={props.backgroundOnClick}\r\n            />}\r\n            <div\r\n                style={{\r\n                    position: 'fixed',\r\n                    top,\r\n                    left,\r\n                    width: props.width,\r\n                    height: props.height,\r\n                    display: 'flex',\r\n                    flexFlow: 'column',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n\r\n                    background: 'white',\r\n                    borderRadius: '30px',\r\n                    color: 'white',\r\n                    zIndex: 1,\r\n\r\n                    ...props.modalStyle,\r\n                }}\r\n                onClick={props.modalOnClick}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Module} from \"../windowModules/UniversalModule\";\r\n\r\ninterface IModalUp {\r\n    speed?: number // 1 - fast; 100 - slow\r\n}\r\n\r\nexport const ModuleUp: React.FC<IModalUp> = ({speed = 10}) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleScroll = () => {\r\n        if (window.pageYOffset > 300) setShow(true);\r\n        else setShow(false);\r\n    };\r\n\r\n    const scroll = () => {\r\n        const step = window.pageYOffset / speed;\r\n        let lastState = window.pageYOffset;\r\n\r\n        const innerTimer = setInterval(() => {\r\n            if (lastState < window.pageYOffset) clearInterval(innerTimer);\r\n            lastState = window.pageYOffset;\r\n\r\n            window.scroll(0, lastState - step);\r\n            if (window.pageYOffset === 0) clearInterval(innerTimer);\r\n        }, 50);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Module\r\n                enableBackground={false}\r\n\r\n                width={100}\r\n                height={50}\r\n                modalOnClick={scroll}\r\n                modalStyle={{\r\n                    top: '90vh',\r\n                    left: '1100px'\r\n                }}\r\n                show={show}\r\n            >\r\n                Up ↑\r\n            </Module>\r\n        </>\r\n    );\r\n};\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from './SearchPack.module.css'\r\nimport {addCardPack, searchPackByFilter, showSearchedPack} from \"../../../BLL/cardsRedusers/cardsPack-reduser\";\r\nimport CustomInput from \"../input/Input\";\r\nimport Button from \"../button/Button\";\r\n\r\n\r\nconst SearchPack = () => {\r\n\r\n    const [search, setSearch] = useState('');\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.currentTarget.value)\r\n    }\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const addCardsButtonClick = () => {\r\n        if (!value) {\r\n            alert(\"Введите название!!!\")\r\n        } else {\r\n            dispatch(addCardPack(value))\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    // ____________ filters for packs__________________\r\n\r\n    const searchByName = () => {\r\n        return dispatch(showSearchedPack(search))\r\n    }\r\n    const searchAtoZ = () => {\r\n        return dispatch(searchPackByFilter('1', 'name'))\r\n    }\r\n    const searchZtoA = () => {\r\n        return dispatch(searchPackByFilter('-1', 'name'))\r\n    }\r\n\r\n    const searchNew = () => {\r\n        return dispatch(searchPackByFilter('1', 'created'))\r\n    }\r\n    const searchOlder = () => {\r\n        return dispatch(searchPackByFilter('-1', 'created'))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.head}>\r\n                <div className={styles.searchTyping}>\r\n                    <CustomInput onChange={onChangeHandler} value={search}/>\r\n                    <Button buttonClass={'regularButton'} onClick={searchByName}>Search</Button>\r\n                </div>\r\n                <div className={styles.searchTyping}>\r\n                    <Button buttonClass={'smallButton'} onClick={searchAtoZ}>Search A-Z </Button>\r\n                    <Button buttonClass={'smallButton'} onClick={searchZtoA}>Search Z-A </Button>\r\n                    <Button buttonClass={'smallButton'} onClick={searchNew}>Search by new </Button>\r\n                    <Button buttonClass={'smallButton'} onClick={searchOlder}>Search by oldest </Button>\r\n                </div>\r\n            </div>\r\n            <div className={styles.head}>\r\n                <div className={styles.searchTyping}>\r\n                    <div><CustomInput onChange={onChange} value={value}/></div>\r\n                    <Button onClick={addCardsButtonClick} buttonClass={'bigButton'}>Add new cards pack</Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchPack\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {Module} from \"../UniversalModule\";\r\nimport CustomInput from \"../../../input/Input\";\r\nimport Button from \"../../../button/Button\";\r\nimport styles from './updatePack.module.css'\r\n\r\ntype PropsType = {\r\n    showModule: boolean,\r\n    packName: string,\r\n    ChangePack: (newPackName: string) => void\r\n    backgroundOnClick: () => void\r\n}\r\n\r\nexport const UpdatePackModule = (props: PropsType) => {\r\n\r\n    const [packName, setPackName] = useState(props.packName)\r\n\r\n    const onchangeInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPackName(e.currentTarget.value)\r\n    }\r\n\r\n    const changePack = () => {\r\n        props.ChangePack(packName)\r\n    }\r\n\r\n    return <Module height={300}\r\n                   width={400}\r\n                   show={props.showModule}\r\n                   backgroundOnClick={props.backgroundOnClick}\r\n                   enableBackground={true}>\r\n        <div className={styles.window}>\r\n            <div style={{color: 'black'}}>Change pack`s name</div>\r\n            <CustomInput\r\n                value={packName}\r\n                onChange={onchangeInput}\r\n            />\r\n            <div className={styles.buttons}>\r\n                <Button buttonClass={'regularButton'} onClick={changePack}>Add</Button>\r\n                <Button buttonClass={'deleteButton'} onClick={props.backgroundOnClick}>Cancel</Button>\r\n            </div>\r\n        </div>\r\n    </Module>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Module} from \"../UniversalModule\";\r\nimport Button from \"../../../button/Button\";\r\nimport styles from '../updatePackModule/updatePack.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    showModule: boolean\r\n    moduleName: string\r\n    onDeletePack: () => void\r\n    backgroundOnClick: () => void\r\n\r\n}\r\n\r\nexport const DeleteModule = (props: PropsType) => {\r\n\r\n    return <Module height={300}\r\n                   width={400}\r\n                   show={props.showModule}\r\n                   backgroundOnClick={props.backgroundOnClick}\r\n                   enableBackground={true}\r\n    >\r\n        <div className={styles.window} style={{height: '100px'}}>\r\n            <div style={{color: 'black'}}>Delete {props.moduleName}?</div>\r\n\r\n            <div className={styles.buttons}>\r\n                <Button\r\n                    buttonClass={'regularButton'}\r\n                    onClick={props.onDeletePack}>\r\n                    Delete\r\n                </Button>\r\n                <Button buttonClass={'deleteButton'}\r\n                        onClick={props.backgroundOnClick}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    </Module>\r\n\r\n}\r\n","import {CardPackType, changeCardPack, deleteCardPack} from \"../../../../../BLL/cardsRedusers/cardsPack-reduser\";\r\nimport React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from \"../CardsPack.module.css\";\r\nimport Button from \"../../../../common/button/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UpdatePackModule} from \"../../../../common/moduls/windowModules/updatePackModule/updatePackModule\";\r\nimport {DeleteModule} from \"../../../../common/moduls/windowModules/deleteModule/deleteModule\";\r\n\r\ntype PropsType = {\r\n    dataItem: CardPackType\r\n    dataIndex: number\r\n}\r\n\r\nexport const ContainerModulePack:React.FC<PropsType> = ({dataItem, dataIndex}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [showUpdateModule, setShowUpdateModule] = useState(false)\r\n    const [showDeleteModule, setShowDeleteModule] = useState(false)\r\n\r\n    const onDeletePack = () => {\r\n        dispatch(deleteCardPack(dataItem._id))\r\n        setShowDeleteModule(false)\r\n    }\r\n    const onChangePack = (newPackName: string) => {\r\n        dispatch(changeCardPack(dataItem._id, newPackName))\r\n        setShowUpdateModule(false)\r\n    }\r\n\r\n    return <div key={dataIndex + dataItem._id}>\r\n        <div  className={styles.buttons}>\r\n            <Button\r\n                onClick={() => setShowDeleteModule(true)}\r\n                buttonClass={'deleteButton'}>\r\n                Delete\r\n            </Button>\r\n            <Button\r\n                onClick={() => setShowUpdateModule(true)}\r\n                buttonClass={'regularButton'}\r\n            >\r\n                Update\r\n            </Button>\r\n            <NavLink to={`/cards/cards/${dataItem._id}`}>\r\n                <Button buttonClass={'regularButton'}>\r\n                    Show cards\r\n                </Button>\r\n            </NavLink>\r\n            <NavLink to=''>\r\n                <Button buttonClass={'regularButton'}>\r\n                    Learn\r\n                </Button>\r\n            </NavLink>\r\n            <Button buttonClass={'regularButton'}>Add to basket</Button>\r\n        </div>\r\n        <UpdatePackModule showModule={showUpdateModule}\r\n                          packName={dataItem.name}\r\n                          ChangePack={onChangePack}\r\n                          backgroundOnClick={() => setShowUpdateModule(false)}\r\n        />\r\n        <DeleteModule\r\n            showModule={showDeleteModule}\r\n            moduleName={'pack'}\r\n            onDeletePack={onDeletePack}\r\n            backgroundOnClick={() => {\r\n                setShowDeleteModule(false)\r\n            }}\r\n        />\r\n    </div>\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../BLL/redux-store\";\r\nimport styles from './CardsPack.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloder\";\r\nimport {\r\n    CardPackType,\r\n    loadCardsPackData\r\n} from '../../../../BLL/cardsRedusers/cardsPack-reduser';\r\nimport Table, {ITableModel} from \"../../../common/Table/Table\";\r\nimport {Paginator} from \"../../../common/Paginator/Paginator\";\r\nimport {ModuleUp} from \"../../../common/moduls/buttonUp/buttonUp\";\r\nimport SearchPack from \"../../../common/SearchPack/SearchPack\";\r\nimport {ContainerModulePack} from \"./ContainerModulePack/ContainerModulePack\";\r\n\r\nconst CardsPack = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {isLoading, cards} = useSelector((store: AppStateType) => store.cardsPack)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadCardsPackData())\r\n    }, [dispatch]);\r\n\r\n    const model: Array<ITableModel> = [\r\n        {\r\n            title: (index: number) => <div key={\"names\" + index}>Names</div>,\r\n            render(dataItem: CardPackType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.name}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"rating\" + index}>Rating</div>,\r\n            render(dataItem: CardPackType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.rating}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"grade\" + index}>Grade</div>,\r\n            render(dataItem: CardPackType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.grade}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"buttons\" + index}>Buttons</div>,\r\n            render:(dataItem: CardPackType, dataIndex: number) => {\r\n                return <ContainerModulePack key={dataIndex + dataItem._id} dataItem={dataItem} dataIndex={dataIndex}/>\r\n            }\r\n        },\r\n    ]\r\n\r\n    return <div>\r\n        {isLoading ? <Preloader/> :\r\n            <div className={styles.container}>\r\n                <SearchPack/>\r\n                <Table model={model} data={cards}/>\r\n                <ModuleUp/>\r\n                <Paginator/>\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default CardsPack\r\n\r\n","import axios from \"axios\";\r\nimport {CardType} from \"../../BLL/cardsRedusers/cards-reduser\";\r\n\r\n\r\nexport type CardsResponseType = {\r\n    cards: Array<CardType>,\r\n    cardsTotalCount: number,\r\n    maxGrade: string,\r\n    minGrade: number,\r\n    page: number\r\n    pageCount: number,\r\n    token: string | null,\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://cards-nya-back.herokuapp.com/1.0/\",\r\n})\r\n\r\n\r\nexport const cardsAPI = {\r\n    getCards(token: string | null, packId: string, page?: number) {\r\n        return instance.get<CardsResponseType>(`cards/card?&token=${token}&cardsPack_id=${packId}&pageCount=10&page=${page}`)\r\n            .then(res => {\r\n                    return res.data\r\n                }\r\n            )\r\n    },\r\n    addCard(token: string | null, packId: string, question: string | number, answer: string | number) {\r\n        return instance.post<PostCardResponseType>('/cards/card', {\r\n            card: {cardsPack_id: packId, question: question, answer: answer},\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    updateCard(cardId: string, token: string | null, question: string, answer: string) {\r\n        return instance.put<PostPutCardsType>('/cards/card', {\r\n            card: {_id: cardId, answer: answer, question: question, grade: 0},\r\n            token\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    deleteCard(cardId: string, token: string | null,) {\r\n        return instance.delete<DeleteCardResponseType>(`/cards/card?token=${token}&id=${cardId}`)\r\n            .then(res => res.data)\r\n    },\r\n    searchCard(token: string | null, inputValue: string,) {\r\n        return instance.get<CardsResponseType>(`/cards/card?token=${token}&cardAnswer=${inputValue}`)\r\n    },\r\n}\r\n\r\n\r\n// ___________Types for requests_________________\r\n\r\nexport type UpdatedCardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    created: string\r\n    grade: number\r\n    question: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type DeleteCardResponseType = {\r\n    deletedCard: CardType\r\n    success: boolean\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\nexport type PostPutCardType = {\r\n    cardsPack_id?: string\r\n    _id?: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    type?: string\r\n}\r\n\r\n\r\nexport type PostPutCardsType = {\r\n    updatedCard: UpdatedCardType\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\nexport type PostCardResponseType = {\r\n    newCard: CardType\r\n    success: boolean\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\nexport type PutCardResponseType = {\r\n    updatedCard: CardType\r\n    success: boolean\r\n    token: string | null\r\n    tokenDeathTime: number\r\n}\r\n","import {baseThunkType, InferActionsTypes} from \"../redux-store\";\r\nimport {cardsAPI, UpdatedCardType} from \"../../DAL/cards/cardsAPI\";\r\nimport {getCookie, setCookie} from \"../common/cookies\";\r\n\r\n\r\nexport  type CardType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\n\r\nexport type CardsType = {\r\n    cards: Array<CardType>,\r\n    cardsTotalCount: number,\r\n    maxGrade: string,\r\n    minGrade: number,\r\n    page: number\r\n    pageCount: number,\r\n    token: string | null,\r\n    tokenDeathTime: number,\r\n    isLoading: boolean\r\n}\r\n\r\n\r\nlet initialState: CardsType = {\r\n    cards: [],\r\n    cardsTotalCount: 0,\r\n    maxGrade: '',\r\n    minGrade: 0,\r\n    page: 0,\r\n    pageCount: 0,\r\n    token: '',\r\n    tokenDeathTime: 0,\r\n    isLoading: false,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const cardsReducer = (state = initialState, action: CardsActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'cardsReducer/LOAD_DATA':\r\n            return {\r\n                ...state,\r\n                cards: action.cards,\r\n                token: action.token,\r\n                isLoading: false\r\n            }\r\n\r\n        case \"cardsReducer/IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: action.value,\r\n            }\r\n        case \"cardsReducer/ADD_CARDS\":\r\n            return {\r\n                ...state,\r\n                cards: [{...action.newCard}, ...state.cards]\r\n            }\r\n        case \"cardsReducer/DELETE_CARD\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card._id !== action.idPack),\r\n                token: action.token\r\n            }\r\n        case \"cardsReducer/UPDATE_CARD\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map(card => card._id === action.idCard ? {...card, ...action.newCard}: card),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\ntype CardsActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nconst actions = {\r\n    loadCards: (cards: Array<CardType>, token: string | null) => ({\r\n        type: 'cardsReducer/LOAD_DATA',\r\n        cards,\r\n        token\r\n    } as const),\r\n    isLoading: (value: boolean) => ({type: 'cardsReducer/IS_LOADING', value} as const),\r\n    addCardsSuccess: (newCard: CardType, token: string | null) => ({\r\n        type: 'cardsReducer/ADD_CARDS',\r\n        newCard,\r\n        token\r\n    } as const),\r\n    deleteCardSuccess: (idPack: string, token: string | null) => ({\r\n        type: 'cardsReducer/DELETE_CARD',\r\n        idPack,\r\n        token\r\n    } as const),\r\n    updateCardSuccess: (newCard: UpdatedCardType, idCard: string, token: string | null) => ({\r\n        type: 'cardsReducer/UPDATE_CARD',\r\n        newCard,\r\n        idCard,\r\n        token\r\n    } as const),\r\n\r\n}\r\n\r\n//__________________ thunk-creators __________________\r\n\r\ntype thunkType = baseThunkType<CardsActionsTypes>\r\n\r\nexport const loadCardsData = (packId: string): thunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(actions.isLoading(true))\r\n        const token: string | null = getCookie('token')\r\n        const res = await cardsAPI.getCards(token, packId)\r\n        setCookie('token', res.token, Math.floor(res.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.loadCards(res.cards, res.token))\r\n    } catch\r\n        (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const addCards = (packId: string, question: string | number, answer: string | number): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.addCard(token, packId, question, answer);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        await dispatch(actions.addCardsSuccess(data.newCard, data.token));\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n}\r\n\r\nexport const deleteCard = (cardId: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.deleteCard(cardId, token);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        await dispatch(actions.deleteCardSuccess(data.deletedCard._id, data.token))\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n};\r\n\r\nexport const updateCard = (cardId: string, question: string, answer: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.updateCard(cardId, token, question, answer);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.updateCardSuccess(data.updatedCard, data.updatedCard._id, data.token));\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n};\r\nexport const searchCardByQuestion = (inputValue: string): thunkType => async (dispatch) => {\r\n    try {\r\n        const token: string | null = getCookie('token')\r\n        const data = await cardsAPI.searchCard(token, inputValue).then(res => res.data);\r\n        setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n        dispatch(actions.loadCards(data.cards, data.token));\r\n    } catch (e) {\r\n        console.error(e.response.data.error)\r\n    }\r\n};\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {Module} from \"../UniversalModule\";\r\nimport CustomInput from \"../../../input/Input\";\r\nimport Button from \"../../../button/Button\";\r\nimport styles from '../updatePackModule/updatePack.module.css'\r\n\r\ntype PropsType = {\r\n    showModule: boolean,\r\n    cardQuestion: string,\r\n    cardAnswer: string,\r\n    ChangeCard: (question: string, answer: string) => void\r\n    backgroundOnClick: () => void\r\n}\r\n\r\nexport const UpdateCardModule = (props: PropsType) => {\r\n\r\n    const [question, setQuestion] = useState(props.cardQuestion);\r\n    const [answer, setAnswer] = useState(props.cardAnswer);\r\n\r\n    const onchangeQuestionInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestion(e.currentTarget.value)\r\n    }\r\n    const onchangeAnswerInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(e.currentTarget.value)\r\n    }\r\n\r\n    const changeCard = () => {\r\n        props.ChangeCard(question, answer)\r\n    }\r\n\r\n    return <Module height={300}\r\n                   width={400}\r\n                   show={props.showModule}\r\n                   backgroundOnClick={props.backgroundOnClick}\r\n                   enableBackground={true}>\r\n        <div className={styles.window}>\r\n            <div style={{color: 'black'}}>Change card question</div>\r\n            <CustomInput\r\n                value={question}\r\n                onChange={onchangeQuestionInput}\r\n            />\r\n            <div style={{color: 'black'}}>Change card answer</div>\r\n            <CustomInput\r\n                value={answer}\r\n                onChange={onchangeAnswerInput}\r\n            />\r\n            <div className={styles.buttons}>\r\n                <Button buttonClass={'regularButton'}\r\n                        onClick={changeCard}>\r\n                    Add\r\n                </Button>\r\n                <Button\r\n                    buttonClass={'deleteButton'}\r\n                    onClick={props.backgroundOnClick}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    </Module>\r\n\r\n}\r\n","import {CardType, deleteCard, updateCard} from \"../../../../../BLL/cardsRedusers/cards-reduser\";\r\nimport styles from \"../../CardsPack/CardsPack.module.css\";\r\nimport Button from \"../../../../common/button/Button\";\r\nimport {DeleteModule} from \"../../../../common/moduls/windowModules/deleteModule/deleteModule\";\r\nimport {UpdateCardModule} from \"../../../../common/moduls/windowModules/updateCardModule/updateCardModule\";\r\nimport React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype PropsType = {\r\n    dataItem: CardType\r\n    dataIndex: number\r\n}\r\n\r\nexport const ContainerModuleCards:React.FC<PropsType> = ({dataItem, dataIndex}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [showUpdateModule, setShowUpdateModule] = useState(false)\r\n    const [showDeleteModule, setShowDeleteModule] = useState(false)\r\n\r\n    const onDeletePack = () => {\r\n        dispatch(deleteCard(dataItem._id))\r\n        setShowDeleteModule(false)\r\n    }\r\n    const onChangeCard = (question: string, answer: string) => {\r\n        dispatch(updateCard(dataItem._id, question, answer))\r\n        setShowUpdateModule(false)\r\n    }\r\n    return <div key={dataIndex + dataItem._id} className={styles.buttons}>\r\n        <Button\r\n            onClick={() => setShowDeleteModule(true)}\r\n            buttonClass={'deleteButton'}\r\n        >\r\n            Delete\r\n        </Button>\r\n        <Button\r\n            onClick={() => setShowUpdateModule(true)}\r\n            buttonClass={'regularButton'}\r\n        >\r\n            Update\r\n        </Button>\r\n        <DeleteModule\r\n            showModule={showDeleteModule}\r\n            moduleName={'card'}\r\n            onDeletePack={onDeletePack}\r\n            backgroundOnClick={() => {\r\n                setShowDeleteModule(false)\r\n            }}\r\n        />\r\n        <UpdateCardModule\r\n            showModule={showUpdateModule}\r\n            cardQuestion={dataItem.question}\r\n            cardAnswer={dataItem.answer}\r\n            ChangeCard={onChangeCard}\r\n            backgroundOnClick={() => setShowUpdateModule(false)}\r\n        />\r\n\r\n    </div>\r\n}\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport styles from \"../CardsPack/CardsPack.module.css\";\r\nimport Button from \"../../../common/button/Button\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../BLL/redux-store';\r\nimport {addCards, CardType, loadCardsData, searchCardByQuestion} from \"../../../../BLL/cardsRedusers/cards-reduser\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Table, {ITableModel} from \"../../../common/Table/Table\";\r\nimport CustomInput from \"../../../common/input/Input\";\r\nimport {ContainerModuleCards} from \"./ContainerModuleCards/ContainerModuleCards\";\r\n\r\nexport const Cards = () => {\r\n    const {id} = useParams()\r\n    const [valueAnswerSearch, setAnswerValueSearch] = useState('');\r\n    const [valueQuestionSearch, setQuestionValueSearch] = useState('');\r\n\r\n    const [valueSearch, setValueSearch] = useState('');\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(loadCardsData(id))\r\n    }, [dispatch])\r\n\r\n    const cards = useSelector<AppStateType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValueSearch(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeQuestion = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setQuestionValueSearch(e.currentTarget.value)\r\n    }\r\n    const onChangeAnswer = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setAnswerValueSearch(e.currentTarget.value)\r\n    }\r\n\r\n    const searchByQuestion = () => {\r\n        dispatch(searchCardByQuestion(valueAnswerSearch))\r\n    }\r\n\r\n\r\n    const model: Array<ITableModel> = [\r\n        {\r\n            title: (index: number) => <div key={\"question\" + index}>Question</div>,\r\n            render(dataItem: CardType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.question}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"answer\" + index}>Answer</div>,\r\n            render(dataItem: CardType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.answer}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"grade\" + index}>Grade</div>,\r\n            render(dataItem: CardType, dataIndex: number) {\r\n                return <div key={dataIndex + dataItem._id}>{dataItem.grade}</div>\r\n            }\r\n        },\r\n        {\r\n            title: (index: number) => <div key={\"buttons\" + index}>Buttons</div>,\r\n            render: (dataItem: CardType, dataIndex: number) => {\r\n                return <ContainerModuleCards key={dataIndex + dataItem._id} dataItem={dataItem} dataIndex={dataIndex}/>\r\n            }\r\n        },\r\n    ]\r\n\r\n    const addCardsButtonClick = () => {\r\n        dispatch(addCards(id, valueQuestionSearch, valueAnswerSearch))\r\n        setAnswerValueSearch(\"\")\r\n        setQuestionValueSearch(\"\")\r\n    }\r\n    return <div>\r\n        {/*{isLoading ? <Preloader/> :*/}\r\n        <div className={styles.searchTyping}>\r\n            <CustomInput onChange={onChangeHandler} value={valueSearch}/>\r\n            <Button buttonClass={'regularButton'} onClick={searchByQuestion}>Search</Button>\r\n        </div>\r\n        <div className={styles.container}>\r\n            <div className={styles.head}>\r\n                Put card question\r\n                <CustomInput onChange={onChangeQuestion} value={valueQuestionSearch}/>\r\n                Put card answer\r\n                <CustomInput onChange={onChangeAnswer} value={valueAnswerSearch}/>\r\n                <Button buttonClass={'regularButton'} onClick={addCardsButtonClick}>Add</Button>\r\n            </div>\r\n            <Table model={model} data={cards}/>\r\n        </div>\r\n        {/*}*/}\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/main/UI/header/Header';\r\nimport Profile from './components/main/UI/pages/Profile/Profile';\r\nimport ForgotPasswordContainer from \"./components/main/UI/pages/RefreshPassword/RefreshPasswordContainer\";\r\nimport NewPasswordContainer from \"./components/main/UI/pages/newPassword/NewPasswordContainer\";\r\nimport LoginPageContainer from \"./components/main/UI/pages/Login/LogInPageContainer\";\r\nimport RegistrationContainer from './components/main/UI/pages/Registration/RegistrationContainer';\r\nimport CardsPack from \"./components/main/UI/pages/Cards/CardsPack/CardsPack\";\r\nimport {Cards} from \"./components/main/UI/pages/Cards/Cards/Cards\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Route exact path=\"/login\" component={LoginPageContainer}/>\r\n            <Route exact path=\"/cards/pack\" component={CardsPack}/>\r\n            <Route path=\"/cards/cards/:id\" component={Cards}/>\r\n            <Route exact path=\"/registration\" component={RegistrationContainer}/>\r\n            <Route exact path=\"/refreshPassword\" component={ForgotPasswordContainer}/>\r\n            <Route path=\"/set-new-password/:id\" component={NewPasswordContainer}/>\r\n            <Route exact path=\"/\" component={Profile}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, Action, combineReducers, applyMiddleware} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {loginReducer} from \"./login-reduser\";\r\nimport {registerReducer} from \"./register-reduser\";\r\nimport {forgotReducer} from \"./forgot-reduser\";\r\nimport {newPasswordReducer} from \"./newPassword-reduser\";\r\nimport {cardsPackReducer } from \"./cardsRedusers/cardsPack-reduser\";\r\nimport { cardsReducer } from \"./cardsRedusers/cards-reduser\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    newPass: newPasswordReducer,\r\n    cardsPack: cardsPackReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nexport default store;\r\n\r\n\r\n// ______type of state___________\r\n\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// ______type of actions___________\r\n\r\ntype PropertiesType<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>\r\n\r\n\r\n// ______type of thunk-creator___________\r\n\r\nexport type baseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./components/main/BLL/redux-store\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}